<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[hexo配置gitalk评论插件]]></title>
    <url>%2F2019%2F08%2F20%2Fhexo%E9%85%8D%E7%BD%AEgitalk%E8%AF%84%E8%AE%BA%E6%8F%92%E4%BB%B6%2Fhexo%E9%85%8D%E7%BD%AEgitalk%E8%AF%84%E8%AE%BA%E6%8F%92%E4%BB%B6%2F</url>
    <content type="text"><![CDATA[&#x4E4B;&#x524D;&#x7528;&#x7684;&#x4E00;&#x76F4;&#x662F;&#x6765;&#x6BD4;&#x529B;&#xFF0C;&#x4E0D;&#x77E5;&#x4E3A;&#x4F55;&#x52A0;&#x8F7D;&#x5F88;&#x6162;&#xFF0C;&#x800C;&#x4E14;&#x793E;&#x533A;&#x7248;&#x6CA1;&#x6709;&#x90AE;&#x4EF6;&#x767B;&#x5F55;&#x7684;&#x9009;&#x9879;&#xFF0C;&#x6BD4;&#x8F83;&#x4E0D;&#x65B9;&#x4FBF;&#xFF0C;&#x4E8E;&#x662F;&#x4E4E;&#xFF0C;&#x6539;&#x6210;&#x4E86;gitalk&#xFF0C;&#x57FA;&#x4E8E;github issue&#x7684;&#x8BC4;&#x8BBA;&#x63D2;&#x4EF6;&#x3002;&#x539F;&#x7406;&#x662F;&#xFF0C;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x7528;&#x6765;&#x5B58;&#x653E;comment&#x7684;repo&#xFF0C;&#x5C06;&#x6240;&#x6709;&#x7684;comment&#x90FD;&#x653E;&#x5728;&#x7279;&#x5B9A;&#x7684;issue&#x4E0B;&#x3002; &#x5199;&#x5728;&#x524D;&#x9762;&#x5B98;&#x65B9;repo &#x521B;&#x5EFA;OAuth application&#x521B;&#x5EFA;&#x4E00;&#x4E2A;github OAuth application&#xFF0C;&#x70B9;&#x51FB;&#x8FD9;&#x91CC;&#xFF0C;&#x70B9;&#x8FDB;&#x53BB;&#x5982;&#x4E0B;&#xFF1A; Application name: &#x968F;&#x4FBF;&#x5199; Homepage url: &#x5199;&#x4F60;&#x7684;&#x535A;&#x5BA2;&#x4E3B;&#x9875;url Application description: &#x5E94;&#x7528;&#x7684;&#x63CF;&#x8FF0; Authorization callback url: &#x56DE;&#x8C03;url&#xFF0C;&#x5199;&#x4F60;&#x7684;&#x535A;&#x5BA2;url &#x5982;&#x679C;&#x4F60;&#x6709;&#x81EA;&#x5DF1;&#x7684;custom domain&#xFF0C;&#x5199;&#x81EA;&#x5DF1;&#x7684;&#x57DF;&#x540D; &#x521B;&#x5EFA;&#x4E00;&#x4E2A;github repo&#x8FD9;&#x4E2A;&#x5F88;&#x7B80;&#x5355;&#xFF0C;&#x4E00;&#x4E2A;&#x7A7A;&#x7684;public&#x7684;repo&#x5C31;&#x884C;&#xFF0C;&#x5148;&#x521B;&#x5728;&#x8FD9;&#x3002;&#x79C1;&#x6709;&#x4ED3;&#x5E93;&#x4E0D;&#x77E5;&#x9053;&#x884C;&#x4E0D;&#x884C;&#xFF0C;&#x8C8C;&#x4F3C;&#x66F4;&#x52A0;&#x9690;&#x79C1; &#x914D;&#x7F6E;hexo&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x4EE5;next&#x4E3B;&#x9898;&#x4E3A;&#x4F8B;&#xFF0C;&#x5176;&#x4ED6;&#x4E3B;&#x9898;&#x53EF;&#x80FD;&#x6709;&#x6240;&#x5DEE;&#x522B; &#x65B0;&#x5EFA;gittalk.swig&#x6587;&#x4EF6; &#x8DEF;&#x5F84;: themes/next/layout/_third-party/comments/ &#x6587;&#x4EF6;&#x5185;&#x5BB9;: 12345678910111213141516 &lt;!-- gitalk &#x8BC4;&#x8BBA;&#x7CFB;&#x7EDF; 2019.8.19 --&gt;{% if page.comments &amp;&amp; theme.gitalk.enable %} &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css&quot;&gt; &lt;script src=&quot;https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js&quot;&gt;&lt;/script&gt; &lt;script type=&quot;text/javascript&quot;&gt; const gitalk = new Gitalk({ clientID: &apos;{{theme.gitalk.clientID}}&apos;, clientSecret: &apos;{{theme.gitalk.clientSecret}}&apos;, repo: &apos;{{theme.gitalk.repo}}&apos;, owner: &apos;{{theme.gitalk.githubID}}&apos;, admin: [&apos;{{theme.gitalk.adminUser}}&apos;], // &#x6CE8;&#x610F;&#x4F7F;&#x7528;&#x5217;&#x8868; id: location.pathname, // &#x4F9D;&#x636E;&#x5B98;&#x65B9;readme,&#x8FD9;&#x91CC;&#x53EF;&#x80FD;&#x4F1A;&#x6709;bug, post lable&#x957F;&#x5EA6;&#x8D85;&#x8FC7;50&#x4F1A;&#x6709;&#x62A5;&#x9519; }) gitalk.render(&apos;gitalk-container&apos;) &lt;/script&gt;{% endif %} &#x4FEE;&#x6539;index.swig&#x6587;&#x4EF6; &#x8DEF;&#x5F84;: themes/next/layout/_third-party/comments/ &#x4FEE;&#x6539;&#x5185;&#x5BB9;:&#x5728;&#x6587;&#x4EF6;&#x6700;&#x540E;&#x4E00;&#x884C;&#x8FFD;&#x52A0;&#x4E0B;&#x5217;&#x8BED;&#x53E5;: 1{% include &apos;gitalk.swig&apos; %} &#x4FEE;&#x6539;comment.swig&#x6587;&#x4EF6; &#x8DEF;&#x5F84;: /themes/next/layout/_partials/ &#x4FEE;&#x6539;&#x5185;&#x5BB9;: 12345678910 {% elseif theme.valine.appid and theme.valine.appkey %}&lt;div class=&quot;comments&quot; id=&quot;comments&quot;&gt;&lt;/div&gt; // &#x5728;&#x8FD9;&#x4E00;&#x884C;&#x7684;&#x4E0B;&#x4E00;&#x884C;&#x5F00;&#x59CB;&#x52A0; {% elseif theme.gitalk.enable %} // &#x52A0;&#x5165;&#x4EE5;&#x4E0B;&#x4E09;&#x884C;&lt;div class=&quot;comments&quot; id=&quot;comments&quot;&gt;&lt;div id=&quot;gitalk-container&quot;&gt;&lt;/div&gt; {% endif %}{% endif %} &#x4FEE;&#x6539;&#x4E3B;&#x9898;&#x914D;&#x7F6E;&#x6587;&#x4EF6;_config.yml &#x6587;&#x4EF6;&#x8DEF;&#x5F84;: /themes/ &#x4FEE;&#x6539;&#x5185;&#x5BB9;: 123456789101112 #gitalk&#x8BC4;&#x8BBA;gitalk: enable: true githubID: github&#x7528;&#x6237;&#x540D; repo: &#x7528;&#x6765;&#x5B58;&#x653E;comment&#x7684;repo clientID: &#x4F60;&#x7684;clientID clientSecret: &#x4F60;&#x7684;clientSecret adminUser: admin&#x7528;&#x6237;&#xFF0C;&#x53EA;&#x6709;admin&#x624D;&#x53EF;&#x4EE5;init issue perPage: 15 pagerDirection: last createIssueManually: false distractionFreeMode: false &#x6D4B;&#x8BD5;hexo clean hexo g hexo d &#x6700;&#x7EC8;&#x7ED3;&#x679C; &#x8E29;&#x8FC7;&#x7684;&#x5751; comment.swig&#x6587;&#x4EF6;&#x914D;&#x7F6E;&#x9519;&#x8BEF;&#xFF0C;&#x6CE8;&#x610F;&#x6240;&#x52A0;&#x4EE3;&#x7801;&#x7684;&#x4F4D;&#x7F6E; OAuth application&#x521B;&#x5EFA;&#x6709;&#x9519;&#x8BEF;&#xFF0C;&#x6309;&#x4EE5;&#x4E0A;&#x505A;&#x6CD5;&#x5373;&#x53EF; &#x7C97;&#x5FC3;&#x3001;&#x5927;&#x5C0F;&#x5199;&#x3001;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x5199;&#x9519; &#x5199;&#x5728;&#x540E;&#x9762;&#x4E0D;&#x77E5;&#x9053;&#x4E3A;&#x4EC0;&#x4E48;&#x5728;hexo&#x4E2D;markdown&#x4F1A;&#x89E3;&#x6790;&#x5947;&#x602A;&#x7684;&#x4E1C;&#x897F;&#xFF0C;&#x6BD4;&#x5982;&#x8BF4;&#x6211;&#x5199;&#x4E86;`&lt;!&#x2013;&#xFFFC;4&#x2013;&gt;`&#x8FD9;&#x4E2A;&#x4E1C;&#x897F;&#xFF0C;&#x5728;hexo g&#x7684;&#x8FC7;&#x7A0B;&#x4E2D;&#xFF0C;&#x4F1A;&#x62A5;&#x9519;&#xFF0C;&#x5F88;&#x5947;&#x602A;&#x7684;&#x9519;&#x8BEF;&#x3002;&#x540E;&#x6765;&#x628A;&#x8FD9;&#x4E2A;post&#x5220;&#x9664;&#x4E86;&#xFF0C;&#x518D;&#x751F;&#x6210;&#x5C31;&#x6CA1;&#x6709;&#x95EE;&#x9898;&#x4E86;&#xFF0C;&#x6240;&#x4EE5;&#x8BF4;&#xFF0C;&#x53EF;&#x4EE5;&#x786E;&#x5B9A;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x662F;&#x51FA;&#x5728;&#x6211;&#x521A;&#x521A;&#x5199;&#x7684;.md&#x6587;&#x4EF6;&#x5185;&#x5BB9;&#x5BFC;&#x81F4;&#x7684;&#x3002; &#x89E3;&#x51B3;&#x6B65;&#x9AA4; &#x5220;&#x9664;&#x6240;&#x6709;&#x4EE3;&#x7801;&#x5757;&#xFF0C;&#x9519;&#x8BEF;&#x6D88;&#x5931;&#xFF0C;&#x8FD8;&#x539F;&#x6240;&#x6709;&#x5185;&#x5BB9; &#x5220;&#x9664;`&lt;!&#x2013;&#xFFFC;5&#x2013;&gt;`&#x8FD9;&#x4E2A;&#x5185;&#x5BB9;&#xFF0C;&#x9519;&#x8BEF;&#x6D88;&#x5931;&#x81F3;&#x6B64;&#xFF0C;&#x53EF;&#x4EE5;&#x77E5;&#x9053;&#xFF0C;&#x95EE;&#x9898;&#x5C31;&#x51FA;&#x5728;`&lt;!&#x2013;&#xFFFC;6&#x2013;&gt;`&#x8FD9;&#x6BB5;&#x5185;&#x5BB9;&#x91CC;&#xFF0C;&#x540E;&#x6765;&#x6539;&#x6210;```&#x5305;&#x542B;&#x7684;&#x4EE3;&#x7801;&#x5757;&#x5C31;&#x6CA1;&#x6709;&#x95EE;&#x9898;&#x3002;&#x6240;&#x4EE5;&#x8BF4;&#xFF0C;&#x9047;&#x5230;\{\%&#x8FD9;&#x6837;&#x7684;&#x5B57;&#x7B26;&#x9700;&#x8981;&#x8F6C;&#x4E49;&#xFF0C;&#x5426;&#x5219;&#x4F1A;&#x88AB;md&#x89E3;&#x6790;&#x3002;TODO&#x8FD9;&#x91CC;&#x8FD8;&#x8981;&#x6DF1;&#x5165;&#x4E86;&#x89E3;&#x4E00;&#x4E0B;md&#x7684;&#x89E3;&#x6790;&#x539F;&#x7406;]]></content>
      <categories>
        <category>blog</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>评论</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[java web 学习开篇]]></title>
    <url>%2F2019%2F08%2F20%2Fjava%20web%20%E5%AD%A6%E4%B9%A0%E5%BC%80%E7%AF%87%2F</url>
    <content type="text"><![CDATA[&#x5199;&#x5728;&#x524D;&#x9762;&#x4EE5;&#x524D;&#x5176;&#x5B9E;&#x633A;&#x770B;&#x4E0D;&#x4E0A;&#x524D;&#x7AEF;coder&#x7684;(&#x8BE5;&#x6B7B;&#x7684;&#x7A0B;&#x5E8F;&#x5458;&#x9119;&#x89C6;&#x94FE;: C++ &gt; C &gt; JAVA &gt; PHP &gt; HTML &#x2026;)&#xFF0C;&#x7A76;&#x5176;&#x539F;&#x56E0;&#xFF0C;&#x6211;&#x4E2A;&#x4EBA;&#x8BA4;&#x4E3A;&#xFF0C;&#x505A;C++&#x7684;&#xFF0C;&#x4EE5;&#x540E;&#x53EF;&#x5F88;&#x81EA;&#x8C6A;&#x7684;&#x8BF4;&#xFF1A;&#x3000;&#x6211;&#x662F;&#x505A;C++&#x7684;&#x3002;&#x53EF;&#x662F;&#xFF0C;&#x6211;&#x4EEC;&#x771F;&#x7684;&#x61C2;C++&#x4E86;&#x5417;&#xFF1F;&#x8FD9;&#x8981;&#x770B;&#x6211;&#x4EEC;&#x5BF9;&#x61C2;&#x7684;&#x5B9A;&#x4E49;&#x4E86;&#xFF0C;&#x4F60;&#x8981;&#x8BF4;&#x6211;&#x4F1A;&#x7528;C++&#x5F00;&#x53D1;&#x4E00;&#x4E2A;&#x5766;&#x514B;&#x5927;&#x6218;&#xFF0C;&#x6211;&#x4F1A;&#x7528;C++&#x5F00;&#x53D1;&#x4E00;&#x4E2A;&#x7BA1;&#x7406;&#x7CFB;&#x7EDF;&#xFF0C;&#x6211;&#x4F1A;&#x7528;C++&#xFF0C;&#x6211;&#x61C2;C++&#x4E86;&#x3002;&#x8FD9;&#x6837;&#x5176;&#x5B9E;&#x4E5F;&#x6CA1;&#x9519;&#xFF0C;&#x53EF;&#x662F;C++&#x8FD9;&#x95E8;&#x7279;&#x6B8A;&#x7684;&#x8BED;&#x8A00;&#xFF0C;&#x5B83;&#x6240;&#x8868;&#x73B0;&#x7684;&#x5E76;&#x4E0D;&#x53EA;&#x662F;&#x9762;&#x5411;&#x5BF9;&#x8C61;&#x7684;&#x7279;&#x6027;&#x3002;&#x4E1A;&#x754C;&#x6709;&#x53E5;&#x8BDD;&#x8BF4;&#x7684;C++: &#x4F60;&#x6C38;&#x8FDC;&#x4E0D;&#x77E5;&#x9053;C++&#x7F16;&#x8BD1;&#x5668;&#x80CC;&#x7740;&#x4F60;&#x5E72;&#x4E86;&#x54EA;&#x4E9B;&#x4E8B;&#x3002;&#x8FD9;&#x53E5;&#x8BDD;&#x5176;&#x5B9E;&#x6211;&#x5F88;&#x8BA4;&#x540C;&#x3002;&#x4F8B;&#x5982;: &#x9ED8;&#x8BA4;&#x6784;&#x9020;&#x51FD;&#x6570;&#x5728;&#x4EC0;&#x4E48;&#x60C5;&#x51B5;&#x4E0B;&#x7F16;&#x8BD1;&#x5668;&#x4F1A;&#x4E3A;&#x6211;&#x4EEC;&#x63D0;&#x4F9B;&#xFF1F; &#x7B54;&#x6848;&#x662F;&#xFF1A;&#x3000;&#x5728;&#x7A0B;&#x5E8F;&#x5458;&#x6CA1;&#x6709;&#x81EA;&#x5DF1;&#x5B9A;&#x4E49;&#x6784;&#x9020;&#x51FD;&#x6570;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x7F16;&#x8BD1;&#x5668;&#x4F1A;&#x4E3A;&#x6211;&#x4EEC;&#x63D0;&#x4F9B;&#x4E00;&#x4E2A;&#x9ED8;&#x8BA4;&#x7684;&#x65E0;&#x53C2;&#x7684;&#x6784;&#x9020;&#x51FD;&#x6570;&#xFF0C;&#x4E00;&#x65E6;&#x7A0B;&#x5E8F;&#x5458;&#x5B9A;&#x4E49;&#x4E86;&#x6784;&#x9020;&#x51FD;&#x6570;&#xFF0C;&#x9ED8;&#x8BA4;&#x7684;&#x6784;&#x9020;&#x51FD;&#x6570;&#x4FBF;&#x4E0D;&#x518D;&#x88AB;&#x63D0;&#x4F9B;&#x3002; C++&#x7684;&#x865A;&#x51FD;&#x6570;&#x673A;&#x5236;&#x662F;&#x4EC0;&#x4E48;&#x6837;&#x7684;&#xFF1F; &#x5C31;&#x6211;&#x6240;&#x4E86;&#x89E3;&#x7684;&#xFF0C;&#x865A;&#x51FD;&#x6570;&#x673A;&#x5236;&#x662F;&#x9760;&#x865A;&#x51FD;&#x6570;&#x8868;VTable&#x548C;&#x865A;&#x51FD;&#x6570;&#x6307;&#x9488;VPtr&#x6765;&#x5B9E;&#x73B0;&#x7684;&#xFF0C;VTable&#x91CC;&#x5B58;&#x653E;&#x4E86;&#x865A;&#x51FD;&#x6570;&#x7684;&#x51FD;&#x6570;&#x5730;&#x5740;&#x2026;(&#x79FB;&#x6B65;&#x4FAF;&#x6377;&#x5927;&#x5E08;&#x8BD1;&#x4F5C;&#x6DF1;&#x5EA6;&#x63A2;&#x7D22;C++&#x5BF9;&#x8C61;&#x6A21;&#x578B;) C++&#x662F;&#x4E00;&#x95E8;Magic&#x7684;&#x8BED;&#x8A00;&#xFF0C;&#x8981;&#x60F3;&#x5B66;&#x597D;C++&#x3001;&#x7528;&#x597D;C++&#xFF0C;&#x5FC5;&#x987B;&#x8981;&#x638C;&#x63E1;&#x6DF1;&#x5C42;&#x6B21;&#x7684;&#x5185;&#x5BB9;&#xFF0C;&#x4F5C;&#x4E3A;&#x4E00;&#x53EA;&#x91CE;&#x751F;&#x7A0B;&#x5E8F;&#x5458;(&#x59D1;&#x4E14;&#x5141;&#x8BB8;&#x6211;&#x81EA;&#x79F0;&#x4E3A;&#x7A0B;&#x5E8F;&#x5458;)&#xFF0C;&#x6211;&#x8BA4;&#x4E3A;&#x6211;&#x662F;&#x4E0D;&#x61C2;C++&#x7684;&#x3002;&#x8981;&#x5B66;&#x597D;C++&#xFF0C;&#x65F6;&#x95F4;&#x6210;&#x672C;&#x5F88;&#x9AD8;&#xFF0C;&#x4F46;&#x662F;&#x4E00;&#x65E6;&#x6709;&#x6240;&#x9886;&#x609F;&#xFF0C;&#x624D;&#x7B97;&#x662F;&#x5165;&#x95E8;&#x4E86;C++&#xFF0C;&#x5C31;&#x76F4;&#x63A5;&#x53EF;&#x4EE5;&#x4F5C;&#x4E3A;&#x996D;&#x7897;&#x3002;&#x5426;&#x5219;&#xFF0C;&#x53EA;&#x4F1A;&#x642C;&#x8D77;&#x77F3;&#x5934;&#x7838;&#x81EA;&#x5DF1;&#x7684;&#x811A;&#x3002;&#x81F3;&#x4E8E;&#x4E3A;&#x4EC0;&#x4E48;&#x8981;&#x5B66;&#x4E60;&#x524D;&#x7AEF;&#x77E5;&#x8BC6;&#x5462;&#xFF1F; B/S&#x6A21;&#x5F0F;&#x5411;C/S&#x6A21;&#x5F0F;&#x8F6C;&#x53D8;&#x7684;&#x8D8B;&#x5411; &#x5F53;&#x4E0B;&#x968F;&#x7740;&#x6D4F;&#x89C8;&#x5668;&#x6280;&#x672F;&#x7684;&#x4E0D;&#x65AD;&#x53D1;&#x5C55;&#x548C;&#x8BA1;&#x7B97;&#x673A;&#x786C;&#x4EF6;&#x6C34;&#x5E73;&#x7684;&#x4E0D;&#x65AD;&#x63D0;&#x9AD8;&#xFF0C;C/S&#x6A21;&#x5F0F;(&#x5373;&#x5BA2;&#x6237;&#x7AEF;/&#x670D;&#x52A1;&#x7AEF;&#x6A21;&#x5F0F;)&#x5DF2;&#x7ECF;&#x4E0D;&#x80FD;&#x6EE1;&#x8DB3;&#x7528;&#x6237;&#x7684;&#x9700;&#x6C42;&#x3001;&#x6216;&#x8005;&#x8BF4;&#x5F00;&#x53D1;&#x7EF4;&#x62A4;&#x6210;&#x672C;&#x9AD8;&#xFF0C;&#x6BD4;&#x5982;&#xFF1A;&#x52A8;&#x6001;&#x4EA4;&#x4E92;&#x3001;&#x53EF;&#x79FB;&#x690D;&#x6027;&#xFF0C;&#x8FD9;&#x4E9B;C/S&#x6A21;&#x5F0F;&#x4E0B;&#x90FD;&#x5F88;&#x96BE;&#x53BB;&#x5B9E;&#x73B0; &#x589E;&#x52A0;&#x6280;&#x672F;&#x6808; &#x4FD7;&#x8BDD;&#x8BF4;&#x6280;&#x591A;&#x4E0D;&#x538B;&#x8EAB;(&#x4F55;&#x51B5;&#x201D;&#x6280;&#x201C;&#x4E5F;&#x4E0D;&#x591A;)&#xFF0C;&#x76EE;&#x524D;&#x53EA;&#x662F;&#x7B80;&#x5355;&#x5B66;&#x4E86;C&#x3001;C++&#x3001;Python&#x3001;JAVA&#xFF0C;&#x4F5C;&#x4E3A;&#x4E00;&#x540D;&#x975E;&#x79D1;&#x73ED;coder&#xFF0C;&#x4EFB;&#x91CD;&#x9053;&#x8FDC;&#x554A;&#x3002;&#x518D;&#x8005;&#xFF0C;&#x4E4B;&#x524D;&#x8001;&#x5E08;&#x6709;&#x627E;&#x6211;&#x505A;&#x4E2A;&#x4E00;&#x4E2A;&#x4E92;&#x8054;&#x7F51;+&#x7684;&#x9879;&#x76EE;&#xFF0C;&#x7531;&#x4E8E;&#x7F3A;&#x5C11;&#x524D;&#x7AEF;&#x5F00;&#x53D1;&#x7ECF;&#x9A8C;&#xFF0C;&#x867D;&#x7136;&#x60F3;&#x63A5;&#x624B;&#xFF0C;&#x4F46;&#x662F;&#x8FD8;&#x662F;&#x62D2;&#x7EDD;&#x4E86;&#x8001;&#x5E08;&#x3002;&#x540E;&#x6765;&#x60F3;&#x60F3;&#x633A;&#x540E;&#x6094;&#x7684;&#x3002;&#x4E8E;&#x662F;&#x4E4E;&#xFF0C;&#x6253;&#x7B97;&#x8FD9;&#x4E2A;&#x6691;&#x5047;&#x8FDB;&#x51FB;JSP&#xFF0C;&#x76EE;&#x6807;&#x662F;&#x5F00;&#x53D1;&#x51FA;&#x4E00;&#x4E2A;web&#x7BA1;&#x7406;&#x4FE1;&#x606F;&#x7CFB;&#x7EDF;&#x3002; &#x653E;&#x5F03;C++&#xFF0C;&#x8F6C;&#x5411;java? &#x771F;&#x7684;&#x662F;&#xFF0C;&#x8D8A;&#x5B66;&#x8D8A;&#x53D1;&#x73B0;&#x81EA;&#x5DF1;&#x8D8A;&#x83DC;&#x3002;&#x76F8;&#x6BD4;&#x8F83;&#x4E8E;C++&#xFF0C;JAVA&#x66F4;&#x5BB9;&#x6613;&#x80FD;&#x591F;&#x5B9E;&#x73B0;&#x4E00;&#x4E9B;&#x4E1C;&#x897F;&#xFF0C;&#x4F30;&#x8BA1;&#x4EE5;&#x540E;&#x81EA;&#x5DF1;&#x4F1A;&#x8D70;JAVA&#x65B9;&#x5411;&#x7684;&#x5427;&#xFF1F;&#x5F53;&#x7136;C++&#x4E5F;&#x4F1A;&#x6301;&#x7EED;&#x6316;&#x6398;&#x7684;&#x3002; &#x5B66;&#x4E60;&#x8FC7;&#x7A0B;&#x76EE;&#x524D;&#x6B63;&#x5728;&#x72C2;&#x8865;&#x77E5;&#x8BC6;&#xFF0C;&#x987A;&#x4FBF;&#x5B9E;&#x73B0;&#x4E00;&#x4E0B;&#x914D;&#x5957;&#x7684;&#x5C0F;demo&#xFF0C;&#x5148;&#x5199;&#x5230;&#x8FD9;&#x91CC;&#xFF0C;&#x5F85;&#x5B9E;&#x6218;&#x9047;&#x5230;&#x95EE;&#x9898;&#x65F6;&#xFF0C;&#x518D;&#x66F4;&#x3002;]]></content>
      <categories>
        <category>web</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>jsp</tag>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2019%2F08%2F17%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
      <categories>
        <category>blog</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>github</tag>
        <tag>上手教程</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[数据结构之进制转换]]></title>
    <url>%2F2019%2F08%2F17%2F%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E8%BF%9B%E5%88%B6%E8%BD%AC%E6%8D%A2%2F</url>
    <content type="text"><![CDATA[&#x6808;&#x7684;&#x4ECB;&#x7ECD; &#x5B9A;&#x4E49;: &#x6808;&#x662F;&#x4E00;&#x79CD;&#x6570;&#x636E;&#x7ED3;&#x6784;&#xFF0C;&#x4E00;&#x79CD;&#x7279;&#x6B8A;&#x7684;&#x7EBF;&#x6027;&#x8868; &#x7279;&#x70B9;: &#x53EA;&#x5141;&#x8BB8;&#x5728;&#x4E00;&#x7AEF;&#x8FDB;&#x884C;&#x63D2;&#x5165;&#x64CD;&#x4F5C;&#xFF0C;&#x53E6;&#x4E00;&#x7AEF;&#x8FDB;&#x884C;&#x5220;&#x9664;&#x64CD;&#x4F5C; &#x5143;&#x7D20;&#x6EE1;&#x8DB3;&#x5148;&#x8FDB;&#x540E;&#x51FA;&#x539F;&#x5219;&#xFF0C;&#x5373;&#x5148;&#x5165;&#x6808;&#x7684;&#x5143;&#x7D20;&#x6700;&#x540E;&#x51FA;&#x6808; &#x7B97;&#x6CD5;&#x8BE6;&#x89E3;&#x7B97;&#x6CD5;&#x5F88;&#x7B80;&#x5355;&#xFF0C;&#x9664;&#xFF38;&#x53D6;&#x4F59;&#x6CD5;&#xFF0C;&#x7528;&#x6808;&#x6765;&#x628A;&#x4F59;&#x6570;&#x5B58;&#x8D77;&#x6765;&#xFF0C;&#x518D;&#x51FA;&#x6808;&#x5373;&#x53EF;&#x4E0A;&#x4EE3;&#x7801;: 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788899091#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;#define maxsize 10typedef struct { int data[maxsize]; int top;}seqstack, *pseqstack;pseqstack init_stack(){ pseqstack s = (pseqstack)malloc(sizeof(seqstack)); if(s){ s -&gt; top = -1; } return s;}void push_stack(pseqstack s, int e){ if (!s || s -&gt; top &gt; maxsize -1){ printf(&quot;&#x5165;&#x6808;&#x5931;&#x8D25;!\n&quot;); //return 0; } else{ s -&gt; top ++; /*&#x4E00;&#x5B9A;&#x8981;&#x5148;&#x628A;&#xFF34;&#xFF2F;&#xFF30;&#x52A0;&#x4E00;&#xFF0C;&#x5426;&#x5219;top &#x539F;&#x6765;&#x662F;&#xFF0D;&#xFF11;,&#x5BFC;&#x81F4;&#x7B2C;&#x4E00;&#x4E2A;&#x5143;&#x7D20;&#x5165;&#x6808;&#x5931;&#x8D25;(bug fixed!)&#x3000;*/ s -&gt; data[s -&gt; top] = e; //return 1; }}int pop_stack(pseqstack s, int *x){ if (!s || s -&gt; top == -1){ printf(&quot;&#x51FA;&#x6808;&#x5931;&#x8D25;!\n&quot;); return -1; } else{ *x = s -&gt; data[s -&gt; top]; s -&gt; top --; return *x; }}/*&#x3000;&#x8F93;&#x51FA;&#x6808;&#x7684;&#x6BCF;&#x4E00;&#x4E2A;&#x5143;&#x7D20;&#x3000;*/void print_each(pseqstack s){ int top0 = s-&gt;top; while(top0 != -1){ printf(&quot;%d\n&quot;, s-&gt;data[top0]); top0 --; } }/*&#x8FDB;&#x5236;&#x8F6C;&#x6362;&#xFF0C;x&#x662F;&#x5341;&#x8FDB;&#x5236;de &#x6570;&#xFF0C;y &#x662F;&#x5F85;&#x8F6C;&#x6362;&#x8FDB;&#x5236;*/void transfer(pseqstack s, int x, int y){ int res; /* &#x3000;&#x6574;&#x9664;&#x540E;&#x4E0D;&#x7B49;&#x4E8E;&#xFF10;&#xFF0C;&#x3000;&#x6267;&#x884C;&#x5FAA;&#x73AF; */ while(x != 0){ push_stack(s, (x%y)); x = x / y; } //printf(&quot;%d\n&quot;, s-&gt;top); /*&#x3000;&#x52A0;&#x4E0A;&#x8F93;&#x51FA;&#x529F;&#x80FD;&#x3000;*/ while(s-&gt; top != -1){ pop_stack(s, &amp;res); printf(&quot;%d&quot;, res); if (s-&gt;top == -1){ printf(&quot;\n&quot;); } } }int main(){ int num; // &#x5341;&#x8FDB;&#x5236;&#x6570; int scale; // &#x8981;&#x8F6C;&#x6362;&#x7684;&#x8FDB;&#x5236;&#x6570; printf(&quot;&#x8F93;&#x5165;&#x5341;&#x8FDB;&#x5236;&#x6570;&#x5B57;&#xFF0C;&#x8FDB;&#x5236;&#x6570;: &quot;); scanf(&quot;%d %d&quot;, &amp;num, &amp;scale); pseqstack S = init_stack(); transfer(S, num, scale); //print_each(S); }]]></content>
      <categories>
        <category>数据结构</category>
      </categories>
      <tags>
        <tag>栈</tag>
        <tag>进制转化</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[数据结构之约瑟夫问题的求解]]></title>
    <url>%2F2019%2F08%2F17%2F%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E7%BA%A6%E7%91%9F%E5%A4%AB%E9%97%AE%E9%A2%98%E7%9A%84%E6%B1%82%E8%A7%A3%2F</url>
    <content type="text"><![CDATA[&#x95EE;&#x9898;&#x4ECB;&#x7ECD;&#x7EA6;&#x745F;&#x592B;&#x95EE;&#x9898; &#x6C42;&#x89E3;&#x65B9;&#x6848; &#x987A;&#x5E8F;&#x8868; &#x5FAA;&#x73AF;&#x94FE;&#x8868;(&#x4E0D;&#x5E26;&#x5934;&#x8282;&#x70B9;)&#x503C;&#x5F97;&#x6CE8;&#x610F;&#x7684;&#x662F;&#xFF0C;&#x5176;&#x5B9E;&#x4E24;&#x79CD;&#x65B9;&#x6CD5;&#x90FD;&#x662F;&#x5229;&#x7528;&#x4E86;&#x5FAA;&#x73AF;&#x7684;&#x7ED3;&#x6784;&#xFF0C;&#x60F3;&#x8C61;&#x6210;&#x4E00;&#x4E2A;&#x65F6;&#x949F;&#x7684;&#x8868;&#x76D8; &#x987A;&#x5E8F;&#x8868; 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110/* &#x7EA6;&#x745F;&#x592B;&#x95EE;&#x9898;&#x7684;&#x987A;&#x5E8F;&#x8868;&#x5B9E;&#x73B0;author: Qian Jipeng(C)date: 2019-3-21*/#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;#define maxsize 100typedef struct node{ int data[maxsize]; int length;}SeqList, *PSeqList;/* &#x521D;&#x59CB;&#x5316; */PSeqList Init(){ PSeqList L; L = (PSeqList)malloc(sizeof(SeqList)); if (L){ L-&gt;length = 0; } return L; /*&#x3000;&#x8FD4;&#x56DE;&#x987A;&#x5E8F;&#x8868;&#x6307;&#x9488;&#x3000;*/}/* &#x63D2;&#x5165; */int InSeqList(PSeqList L, int i, int e){ if(i &lt; 1 || i &gt; L-&gt;length+1 || L-&gt;length &gt;= maxsize){ printf(&quot;&#x63D2;&#x5165;&#x5931;&#x8D25;!\n&quot;); return 0; } else{ int j; L-&gt;data[i-1] = e; for (j=L-&gt;length; j&gt;=i; j--){ L-&gt;data[j] = L-&gt;data[j-1]; /*&#x3000;&#x4F9D;&#x6B21;&#x5F80;&#x540E;&#x79FB;&#x52A8;&#x3000;*/ } L-&gt;length ++; } return 1;}/* &#x5220;&#x9664; */int DelSeqList(PSeqList L, int i, int *x){ if ( i &lt; 1 || i &gt; L-&gt;length){ printf(&quot;&#x5220;&#x9664;&#x4F4D;&#x7F6E;&#x4E0D;&#x5408;&#x6CD5;\n&quot;); return 0; } int j; int tmp; // &#x4FDD;&#x5B58;&#x5C06;&#x88AB;&#x5220;&#x9664;&#x7684;&#x5143;&#x7D20; tmp = L-&gt;data[i-1]; for (j = i ; j &lt;= L-&gt;length; j++ ){ // &#x4ECE;&#x7B2C;I &#x4E2A;&#x5F00;&#x59CB;&#x5F80;&#x524D;&#x79FB;&#x52A8;&#x4E00;&#x4F4D; L-&gt;data[j-1] = L-&gt;data[j]; } L-&gt;length --; //printf(&quot;&#x5220;&#x9664;&#x7B2C; %d &#x4E2A;&#x4F4D;&#x7F6E;&#x5143;&#x7D20; %d &#x6210;&#x529F;&#xFF01;\n&quot;, i, tmp); return 1;}// &#x529F;&#x80FD;&#x51FD;&#x6570; s &#x5F00;&#x59CB;&#xFF0C; &#x6570;&#x5230; m int yusefu_SeqList(PSeqList L, int s, int m){ int x; int i; int s1; int w; // &#x4FDD;&#x5B58;&#x5220;&#x9664;&#x7684;&#x5143;&#x7D20; if( L-&gt; length == 0){ printf(&quot;&#x8868;&#x7A7A;!\n&quot;); return 0; } s1 = s -1; // &#x4F9D;&#x6B21;&#x51FA;&#x53BB; for (i = L-&gt;length; i &gt; 0; i--){ /* &#x5173;&#x952E;&#x6B65;&#x9AA4;&#x3000;*/ s1 = (s1+m-1) % i; w = L -&gt; data[s1]; // &#x4E0B;&#x6807; s1, &#x662F;&#x7B2C;s1+1 &#x4E2A;&#x5143;&#x7D20;&#xFF01;&#xFF01;&#xFF01; DelSeqList(L, s1+1, &amp;x); printf(&quot;&#x51FA;&#x5217;: %d\n&quot;, w); } return 1;}int main(){ int len; // &#x5E8F;&#x5217;&#x957F;&#x5EA6; int num[maxsize]; // &#x7528;&#x6765;&#x5B58;&#x8F93;&#x5165;&#x7684;&#x6570; PSeqList L = (PSeqList)malloc(sizeof(SeqList)); printf(&quot;&#x8F93;&#x5165;&#x5E8F;&#x5217;&#x5143;&#x7D20;&#x4E2A;&#x6570;: &quot;); scanf(&quot;%d&quot;, &amp;len); printf(&quot;&#x8F93;&#x5165;&#x7EA6;&#x745F;&#x592B;&#x5E8F;&#x5217;(&#x7A7A;&#x683C;&#x5206;&#x5F00;): &quot;); // &#x4F9D;&#x6B21;&#x63D2;&#x5165; for (int l = 0; l &lt; len; l++ ){ scanf(&quot;%d&quot;, &amp;num[l]); InSeqList(L, l+1, num[l]); //printf(&quot; %d &quot;, num[l]); } yusefu_SeqList(L, 2, 5); return 0;} 2.&#x5FAA;&#x73AF;&#x94FE;&#x8868; &#x8FD9;&#x91CC;&#x7684;&#x5FAA;&#x73AF;&#x94FE;&#x8868;&#x662F;&#x6CA1;&#x6709;&#x5934;&#x7ED3;&#x70B9;&#x7684;&#xFF0C;&#x4E3A;&#x4E86;&#x64CD;&#x4F5C;&#x65B9;&#x4FBF;&#xFF0C;&#x5426;&#x5219;&#x6BCF;&#x6BCF;&#x5FAA;&#x73AF;&#x5230;&#x5934;&#x7ED3;&#x70B9;&#x8FD8;&#x8981;&#x8DF3;&#x8FC7;&#x8FD9;&#x4E2A;&#x5934;&#x7ED3;&#x70B9;&#xFF0C;&#x6211;&#x7684;&#x505A;&#x6CD5;&#x662F;:1.&#x3000;&#x5148;&#x628A;&#x7B2C;&#x4E00;&#x4E2A;&#x5143;&#x7D20;&#x653E;&#x5165;&#x7B2C;&#x4E00;&#x4E2A;&#x8282;&#x70B9;(&#x5373;&#x9996;&#x5143;&#x8282;&#x70B9;)&#xFF0C;&#x53EA;&#x6709;&#x6570;&#x636E;&#x57DF;&#xFF0C;&#x6307;&#x9488;&#x57DF;&#x7F6E;&#x7A7A;2.&#x3000;&#x63A5;&#x7740;&#x7528;&#x4E2A;&#x5FAA;&#x73AF;&#xFF0C;&#x521B;&#x5EFA;&#x5269;&#x4E0B;&#x7684;&#x5355;&#x4E2A;&#x8282;&#x70B9;&#xFF0C;&#x540C;&#x6837;&#x53EA;&#x6709;&#x6570;&#x636E;&#x57DF;3.&#x3000;&#x518D;&#x628A;&#x8FD9;&#x4E9B;&#x8282;&#x70B9;&#x8FDE;&#x63A5;&#x8D77;&#x6765; 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889909192939495969798/* &#x7EA6;&#x745F;&#x592B;&#x95EE;&#x9898;&#x7684;&#x5FAA;&#x73AF;&#x94FE;&#x8868;&#x5B9E;&#x73B0;* author: Qian Jipeng(C)* date: 2019-3-24* version: 2.0(1.0 aborted for too complexed)*/#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;/* node definition&#x3000;*/typedef struct node{ int data; struct node * next;}linklist;/*&#x3000;\brief: crate the linklist and do insert, return the first node&apos;s ptr&#x3000;\param: n -&gt;&gt; the size of the serises\return: the first node&apos;s ptr*//* creat the node in range(1, n)*/linklist * initLink(int n){ linklist * head = (linklist*)malloc(sizeof(linklist)); /* the first node initionalized (not head node)*/ head-&gt;data = 1; head-&gt;next = NULL; /* a ptr to move through the list */ linklist * tmp = head; /* we satrt with the second node for a loop */ for (int i = 2; i &lt;= n; i ++) { linklist * body = (linklist*)malloc(sizeof(linklist)); /* creat and init single node */ body -&gt; data = i; body -&gt; next = NULL; /* connect the single nodes together */ tmp -&gt; next = body; tmp = tmp -&gt; next; } //printf(&quot;%d\n&quot;, tmp-&gt;data); /* now tmp is just the last node */ tmp -&gt; next = head; /*connect the head and the rear */ return head; /* by this method, we created a loop linklist */}void yusefu(linklist * head,int k,int m){ linklist * tail = head; //&#x627E;&#x5230;&#x94FE;&#x8868;&#x7B2C;&#x4E00;&#x4E2A;&#x7ED3;&#x70B9;&#x7684;&#x4E0A;&#x4E00;&#x4E2A;&#x7ED3;&#x70B9;&#xFF0C;&#x4E3A;&#x5220;&#x9664;&#x64CD;&#x4F5C;&#x505A;&#x51C6;&#x5907; while (tail -&gt; next != head) { tail = tail -&gt; next; } linklist * p = head; //&#x627E;&#x5230;&#x7F16;&#x53F7;&#x4E3A;k&#x7684;&#x4EBA;(&#x6216;&#x8005;&#x662F;&#x7B2C;&#x51E0;&#x4E2A;&#x5F00;&#x59CB;&#xFF0C;&#x53EF;&#x4EE5;&#x6539;) while (p -&gt; data != k) { tail = p; p = p-&gt;next; } //&#x4ECE;&#x7F16;&#x53F7;&#x4E3A;k&#x7684;&#x4EBA;&#x5F00;&#x59CB;&#xFF0C;&#x53EA;&#x6709;&#x7B26;&#x5408;p-&gt;next==p&#x65F6;&#xFF0C;&#x8BF4;&#x660E;&#x94FE;&#x8868;&#x4E2D;&#x9664;&#x4E86;p&#x7ED3;&#x70B9;&#xFF0C;&#x6240;&#x6709;&#x7F16;&#x53F7;&#x90FD;&#x51FA;&#x5217;&#x4E86;&#xFF0C; while (p -&gt; next != p) { //&#x627E;&#x5230;&#x4ECE;p&#x62A5;&#x6570;1&#x5F00;&#x59CB;&#xFF0C;&#x62A5;m&#x7684;&#x4EBA;&#xFF0C;&#x5E76;&#x4E14;&#x8FD8;&#x8981;&#x77E5;&#x9053;&#x6570;m-1de&#x4EBA;&#x7684;&#x4F4D;&#x7F6E;tail&#xFF0C;&#x65B9;&#x4FBF;&#x505A;&#x5220;&#x9664;&#x64CD;&#x4F5C;&#x3002; for (int i = 1; i &lt; m; i ++) { tail = p; p = p -&gt; next; } tail-&gt;next=p-&gt;next;//&#x4ECE;&#x94FE;&#x8868;&#x4E0A;&#x5C06;p&#x7ED3;&#x70B9;&#x53BB;&#x9664; printf(&quot;%d \t&quot;,p -&gt; data); free(p); p = tail -&gt; next;//&#x7EE7;&#x7EED;&#x4F7F;&#x7528;p&#x6307;&#x9488;&#x6307;&#x5411;&#x51FA;&#x5217;&#x7F16;&#x53F7;&#x7684;&#x4E0B;&#x4E00;&#x4E2A;&#x7F16;&#x53F7; } /* the last one */ printf(&quot;%d \n&quot;,p -&gt; data); free(p);}int main() { linklist * head=initLink(10); yusefu(head, 2, 5); return 0;}]]></content>
      <categories>
        <category>数据结构</category>
      </categories>
      <tags>
        <tag>约瑟夫问题</tag>
        <tag>线性表</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[数据结构之逆波兰式]]></title>
    <url>%2F2019%2F08%2F17%2F%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E9%80%86%E6%B3%A2%E5%85%B0%E5%BC%8F%2F</url>
    <content type="text"><![CDATA[&#x5B66;&#x7684;&#x6570;&#x636E;&#x7ED3;&#x6784;&#xFF0C;&#x611F;&#x89C9;&#x638C;&#x63E1;&#x7684;&#x4E0D;&#x7262;&#x56FA;&#xFF0C;&#x4E8E;&#x662F;&#x5B9E;&#x73B0;&#x4E86;&#x4E00;&#x4E2A;demo &#x4E2D;&#x7F00;&#x8868;&#x8FBE;&#x5F0F;&#x8F6C;&#x6362;&#x4E3A;&#x540E;&#x7F00;&#x8868;&#x8FBE;&#x5F0F;&#x5E76;&#x6C42;&#x503C; &#x7B97;&#x6CD5;&#x601D;&#x60F3;:&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x64CD;&#x4F5C;&#x6570;&#x6808;&#xFF0C;&#x81EA;&#x5DE6;&#x5411;&#x53F3;&#x904D;&#x5386;&#x540E;&#x7F00;&#x8868;&#x8FBE;&#x5F0F;&#xFF0C;&#x9047;&#x5230;&#x4E00;&#x4E2A;&#x64CD;&#x4F5C;&#x6570;&#x5C31;&#x5165;&#x6808;&#xFF0C;&#x9047;&#x5230;&#x4E00;&#x4E2A;&#x64CD;&#x4F5C;&#x7B26;&#x5C31;&#x4ECE;&#x6808;&#x4E2D;&#x53D6;&#x51FA;&#x4E24;&#x4E2A;&#x64CD;&#x4F5C;&#x6570;&#x8FDB;&#x884C;&#x5F53;&#x524D;&#x8BA1;&#x7B97;&#xFF0C;&#x8F7D;&#x628A;&#x7ED3;&#x679C;&#x5165;&#x6808;&#xFF0C;&#x76F4;&#x5230;&#x8868;&#x8FBE;&#x5F0F;&#x672B;&#x5C3E;, &#x6700;&#x540E;&#x4E00;&#x4E2A;&#x5165;&#x6808;&#x7684;&#x5C31;&#x662F;&#x6700;&#x7EC8;&#x7ED3;&#x679C; &#x5148;&#x5B9E;&#x73B0;&#x6C42;&#x503C;&#x8FD9;&#x4E00;&#x6B65;&#x5427;&#xFF0C;&#x5DF2;&#x77E5;&#x540E;&#x7F00;&#x8868;&#x8FBE;&#x5F0F; &#x8F6C;&#x6362;&#x8FD9;&#x4E00;&#x73AF;&#x8282;&#x5F85;&#x66F4;&#x65B0;&#x2026; &#x6E90;&#x4EE3;&#x7801;123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;#define maxsize 100#define datatype inttypedef struct { datatype data[maxsize]; int top; // top &#x6307;&#x660E;&#x5F53;&#x524D;&#x6808;&#x9876;&#x5143;&#x7D20;&#x7684;&#x4F4D;&#x7F6E;} SeqStack, *PSeqStack;// &#x521D;&#x59CB;&#x5316;&#x987A;&#x5E8F;&#x6808;PSeqStack Init_SeqStack(){ PSeqStack S; S = (PSeqStack) malloc(sizeof(SeqStack)); //printf(&quot;%p\n&quot;, S); if (S) S -&gt; top = -1; // top &#x8BBE;&#x4E3A;-1 (&#x8BA4;&#x4E3A;&#x8BBE;&#x5B9A;),&#x8868;&#x793A;&#x7A7A; return S; // &#x8FD4;&#x56DE;&#x6307;&#x5411;&#x987A;&#x5E8F;&#x6808;&#x7684;&#x6307;&#x9488;}// &#x5224;&#x65AD;&#x6808;&#x7A7A;int Empty_SeqStack(PSeqStack S){ // &#x6CA1;&#x6709;&#x5143;&#x7D20;&#xFF0C;&#x7A7A;&#x6808; if (S -&gt; top == -1) return 1; // 1 &#x8868;&#x793A;&#x4E3A;&#x7A7A; return 0; }// &#x5165;&#x6808;void Push_SeqStack(PSeqStack S, datatype x){ if (S -&gt; top == maxsize-1){ printf(&quot;&#x6808;&#x6EE1;&#x4E0D;&#x80FD;&#x518D;&#x5165;&#x6808;\n&quot;); //return 0; // &#x8FD4;&#x56DE; 0 &#x8868;&#x793A;&#x5931;&#x8D25; } else{ S -&gt; top ++; S -&gt; data[S -&gt; top] = x; //return 1; }}// &#x51FA;&#x6808;,&#x4FDD;&#x5B58;&#x6808;&#x9876;&#x5143;&#x7D20;&#x4E8E;*x&#x4E2D;&#xFF0C;&#x5E76;&#x5220;&#x9664;void Pop_SeqStack(PSeqStack S, datatype *x){ if (Empty_SeqStack(S)){ printf(&quot;&#x6808;&#x7A7A;&#x4E0D;&#x80FD;&#x51FA;&#x6808;\n&quot;); //return 0; // 0 &#x8868;&#x793A;&#x51FA;&#x6808;&#x5931;&#x8D25; } else{ *x = S -&gt; data[S -&gt; top]; S -&gt; top --; //return 1; }}// &#x53D6;&#x6808;&#x9876;&#x5143;&#x7D20;&#xFF0C;&#x53EA;&#x662F;&#x83B7;&#x53D6;&#x4ED6;&#x7684;&#x503C;&#x5E76;&#x5B58;&#x5165;*x&#xFF0C;&#x5E76;&#x6CA1;&#x6709;&#x53D6;&#x51FA;&#x6765;(&#x5220;&#x9664;),&#x6CE8;&#x610F;&#x533A;&#x522B;int GetTop_SeqStack(PSeqStack S, datatype *x){ if (Empty_SeqStack(S)){ printf(&quot;&#x6808;&#x7A7A;&#x4E0D;&#x80FD;&#x53D6;top&#x5143;&#x7D20;\n&quot;); return 0; } else{ *x = S -&gt; data[S -&gt; top]; return 1; }}// &#x9500;&#x6BC1;&#x6808;&#xFF0C;&#x53C2;&#x6570;&#x4E3A;&#x5F85;&#x9500;&#x6BC1;&#x987A;&#x5E8F;&#x6808;&#x7684;&#x6307;&#x9488;&#x5730;&#x5740;void Destory_SeqStack(PSeqStack *S){ // *S &#x4E8C;&#x7EA7;&#x6307;&#x9488; if (*S) free (*S); *S = NULL; return;}/*&#x3000;&#x5224;&#x65AD;&#x662F;&#x5426;&#x662F;&#x64CD;&#x4F5C;&#x6570;&#x3000;*/int IsNum(char c){ if (c &gt;= &apos;0&apos; &amp;&amp; c &lt;= &apos;9&apos;){ return 1; } return 0;}char transfer(){ }/* &#x6838;&#x5FC3;&#x51FD;&#x6570;&#x3000;*/int calculate(char *A){ PSeqStack s = Init_SeqStack(); int result; int a, b, c; // a,b &#x4E0A;&#x4E00;&#x6B21;&#xFF0C;&#x4E0A;&#x4E0A;&#x4E00;&#x6B21;&#x5165;&#x6808;&#x7684;&#x5143;&#x7D20;&#xFF0C;&#xFF23;&#x662F;&#x4E34;&#x65F6;&#x53D8;&#x91CF; char ch; ch = *A ++; /* &#x6211;&#x4EEC;&#x4EBA;&#x4E3A;&#x8BBE;&#x7F6E;&#xFF0C;&#x5728;&#x5B57;&#x7B26;&#x6570;&#x7EC4;&#x672B;&#x5C3E;&#x52A0;&#x4E00;&#x4E2A;&apos;#&apos;, &#x4F5C;&#x4E3A;&#x7ED3;&#x675F;&#x7B26;&#x3000;*/ while(ch != &apos;#&apos;){ if (IsNum(ch)){ Push_SeqStack(s, ch - &apos;0&apos;); } else { /* &#x8FD9;&#x91CC;&#x6CE8;&#x610F;&#xFF0C;&#x3000;&#x5148;&#x8FDB;&#x540E;&#x51FA;&#x3000;*/ Pop_SeqStack(s, &amp;b); Pop_SeqStack(s, &amp;a); switch (ch) { case &apos;+&apos;: c = a+b; break; case &apos;-&apos;: c = a-b; break; case &apos;*&apos;: c = a*b; break; case &apos;/&apos;: c = a/b; break; default: break; } /* &#x4E34;&#x65F6;&#x7ED3;&#x679C;&#x5165;&#x6808;&#x3000;*/ Push_SeqStack(s, c); } ch = *A ++; } GetTop_SeqStack(s, &amp;result); Destory_SeqStack(&amp;s); return result;}int main(){ char num[12] = {&apos;1&apos;,&apos;2&apos;,&apos;8&apos;,&apos;5&apos;,&apos;-&apos;,&apos;*&apos;,&apos;+&apos;,&apos;4&apos;,&apos;2&apos;,&apos;/&apos;,&apos;-&apos;, &apos;#&apos;}; printf(&quot;&#x8BA1;&#x7B97;&#x7ED3;&#x679C;: %d\n&quot;,calculate(num)); return 0;} &#x6D4B;&#x8BD5;&#x8F93;&#x5165;: 1char num[12] = {&apos;1&apos;,&apos;2&apos;,&apos;8&apos;,&apos;5&apos;,&apos;-&apos;,&apos;*&apos;,&apos;+&apos;,&apos;4&apos;,&apos;2&apos;,&apos;/&apos;,&apos;-&apos;, &apos;#&apos;}; &#x6D4B;&#x8BD5;&#x7ED3;&#x679C;: 15 &#x5199;&#x5728;&#x6700;&#x540E;&#x5176;&#x5B9E;&#xFF0C;&#x4E60;&#x60EF;&#x4E86;&#x7528;C++&#x7684;STL&#x5BB9;&#x5668;&#xFF0C;&#x6211;&#x5728;&#x5E73;&#x65F6;&#x7684;coding&#x4E2D;&#x5F88;&#x5C11;&#x4F1A;&#x81EA;&#x5DF1;&#x53BB;&#x521B;&#x5EFA;&#x4E00;&#x4E9B;&#x6570;&#x636E;&#x7ED3;&#x6784;&#xFF0C;&#x8981;&#x6392;&#x5E8F;&#x4F1A;&#x6709;std::sort()&#x51FD;&#x6570;&#xFF0C;&#x800C;&#x4E14;STL&#x5BB9;&#x5668;&#x7684;&#x7B97;&#x6CD5;&#x590D;&#x6742;&#x5EA6;&#x8981;&#x8FDC;&#x6BD4;&#x5355;&#x4E00;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x7B97;&#x6CD5;&#x590D;&#x6742;&#x5EA6;&#x8981;&#x5C0F;&#x7684;&#x591A;&#xFF0C;&#x5C31;&#x62FF;&#x6392;&#x5E8F;&#x6765;&#x8BF4;&#xFF0C;&#x4ED6;&#x7528;&#x7684;&#x53EF;&#x4E0D;&#x6B62;&#x4E00;&#x79CD;&#x6392;&#x5E8F;&#x7B97;&#x6CD5;&#xFF0C;&#x4E0D;&#x4FE1;&#x8FD9;&#x4E2A;&#x6709;&#x65F6;&#x95F4;&#x54B1;&#x4EEC;&#x53EF;&#x4EE5;&#x9A8C;&#x8BC1;&#x2026;&#x6211;&#x5B66;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x6700;&#x5927;&#x7684;&#x6536;&#x83B7;&#x5C31;&#x662F;&#xFF1A; &#x5B66;&#x4F1A;&#x7528;&#x8BA1;&#x7B97;&#x673A;&#x7684;&#x601D;&#x7EF4;&#x53BB;&#x601D;&#x8003;&#x95EE;&#x9898; &#x5B66;&#x4F1A;&#x5982;&#x4F55;&#x8C03;&#x8BD5;&#x7A0B;&#x5E8F; &#x5B66;&#x4F1A;&#x8010;&#x5FC3;&#x505A;&#x4E00;&#x4EF6;&#x4E8B;&#x8BFE;&#x7A0B;&#x8BBE;&#x8BA1;]]></content>
      <categories>
        <category>数据结构</category>
      </categories>
      <tags>
        <tag>逆波兰式</tag>
        <tag>堆栈</tag>
        <tag>中缀表达式</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Linux系统下文件乱码问题解决]]></title>
    <url>%2F2019%2F08%2F17%2FLinux%E7%B3%BB%E7%BB%9F%E4%B8%8B%E6%96%87%E4%BB%B6%E4%B9%B1%E7%A0%81%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3-1%2F</url>
    <content type="text"><![CDATA[&#x4ECA;&#x5929;&#x5728;github&#x4E0A;clone&#x4E86;&#x4E00;&#x4E2A;master&#xFF0C;&#x60F3;&#x62FF;&#x6765;&#x7EC3;&#x624B;&#xFF0C;&#x65E0;&#x5948;&#x662F;Windows&#x4E0B;&#x7684;&#x7F16;&#x7801;&#xFF0C;&#x4E2D;&#x6587;&#x4E71;&#x7801;&#xFF0C;&#x82F1;&#x6587;OK&#x3002;&#x4E8E;&#x662F;&#x60F3;&#x5230;&#x4E4B;&#x524D;&#x770B;&#x8FC7;&#x4E00;&#x7BC7;&#x5E16;&#x5B50;&#xFF0C;&#x8BB0;&#x5F55;&#x5982;&#x4E0B;&#x3002; &#x4E3B;&#x8981;&#x662F;&#x7528;&#x5230;&#x4E86;Linux&#x7684; iconv &#x547D;&#x4EE4; Step one&#x3000;&#x83B7;&#x53D6;&#x5F53;&#x524D;&#x6587;&#x4EF6;&#x7F16;&#x7801;&#x6211;&#x5F53;&#x524D;&#x6587;&#x4EF6;&#x662F; Student.cpp 1file Student.cpp &#x5F97;&#x5230;&#x8F93;&#x51FA;&#x5982;&#x4E0B;&#xFF1A; 1Student.cpp: C source, UTF-8 Unicode text &#x662F;&#x4E2A;&#x4E07;&#x56FD;&#x7801; Step Two &#x83B7;&#x53D6;&#x672C;&#x673A;&#x7F16;&#x7801;1cat /etc/sysconfig/i18n &#x4E0D;&#x77E5;&#x9053;&#x4E3A;&#x4EC0;&#x4E48;&#x6211;&#x8FD9;&#x91CC;&#x62A5;&#x9519;&#xFF0C;&#x6CA1;&#x6709;&#x8FD9;&#x4E2A;&#x6587;&#x4EF6;???&#x4E0D;&#x8FC7;Linux&#x4E00;&#x822C;&#x90FD;&#x662F;UTF-8 Step Three &#x4FEE;&#x6539;&#x6587;&#x4EF6;&#x7F16;&#x7801;1iconv -f GBK -t UTF-8 Student.cpp -o Student0.cpp &#x8FD9;&#x91CC;Student.cpp&#x662F;&#x539F;&#x6765;&#x7684;&#x6587;&#x4EF6;&#xFF0C;Student0.cpp&#x662F;&#x6211;&#x4FEE;&#x6539;&#x540E;&#x7684;&#x6587;&#x4EF6;&#x3002; &#x6539;&#x540E;&#x6253;&#x5F00;&#x6587;&#x4EF6;&#x5C31;&#x6CA1;&#x6709;&#x4E71;&#x7801;&#x95EE;&#x9898;&#x4E86; &#x8FD9;&#x91CC;&#x6709;&#x4E2A;&#x95EE;&#x9898;&#xFF0C;&#x5982;&#x679C;&#x6709;&#x591A;&#x4E2A;&#x6587;&#x4EF6;&#x4E0D;&#x80FD;&#x5728;&#x4E00;&#x8D77;&#x8F6C;&#x5316;&#x6BD4;&#x5982;&#x6211;&#x6709;&#x4E24;&#x4E2A;&#x6587;&#x4EF6;&#xFF0C;Student.cpp &#x548C; Student.h &#x5FC5;&#x987B;&#x8981;&#x6267;&#x884C;&#x4E24;&#x6B21;&#x547D;&#x4EE4;&#xFF0C;&#x5C34;&#x5C2C;&#x3002;&#x540E;&#x6765;&#x60F3;&#x8D77;&#x6765;&#x53EF;&#x4EE5;&#x7528;&#x901A;&#x914D;&#x7B26;&#xFF0C;&#x6587;&#x4EF6;&#x540D;&#x4E0D;&#x6539;&#x53D8;&#xFF0C;&#x5373;&#x53EF; &#x6CE8;&#x610F;&#xFF1A; &#x901A;&#x914D;&#x7B26;&#x8981;&#x614E;&#x7528;! &#x6700;&#x540E;&#x7684;&#x6700;&#x540E;: &#x5199;&#x4E86;&#x4E2A;&#x5C0F;&#x9879;&#x76EE;&#xFF0C;&#x653E;&#x5728;&#x4E86;&#x4ED3;&#x5E93;&#x4E2D;&#x7F16;&#x7801;&#x8F6C;&#x6362;]]></content>
      <categories>
        <category>utils</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>编码</tag>
        <tag>shell</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[和小薇薇的700天]]></title>
    <url>%2F2019%2F08%2F16%2F%E5%92%8C%E5%B0%8F%E8%96%87%E8%96%87%E7%9A%84700%E5%A4%A9%2F</url>
    <content type="text"><![CDATA[Encrypted passage, enter password to read. Decrypt ]]></content>
      <categories>
        <category>小胖子</category>
      </categories>
      <tags>
        <tag>700天</tag>
      </tags>
  </entry>
</search>
