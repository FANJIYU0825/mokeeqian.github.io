<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Mokeeqian&#39;s Blog</title>
    <link>http://www.qianjipeng.top/</link>
    <atom:link href="/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>Welcome to mokeeqian&#39;s blog</description>
    <pubDate>Wed, 21 Aug 2019 10:42:19 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>hexo配置gitalk评论插件</title>
      <link>http://www.qianjipeng.top/2019/08/20/hexo%E9%85%8D%E7%BD%AEgitalk%E8%AF%84%E8%AE%BA%E6%8F%92%E4%BB%B6/hexo%E9%85%8D%E7%BD%AEgitalk%E8%AF%84%E8%AE%BA%E6%8F%92%E4%BB%B6/</link>
      <guid>http://www.qianjipeng.top/2019/08/20/hexo%E9%85%8D%E7%BD%AEgitalk%E8%AF%84%E8%AE%BA%E6%8F%92%E4%BB%B6/hexo%E9%85%8D%E7%BD%AEgitalk%E8%AF%84%E8%AE%BA%E6%8F%92%E4%BB%B6/</guid>
      <pubDate>Tue, 20 Aug 2019 13:13:05 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;&amp;#x4E4B;&amp;#x524D;&amp;#x7528;&amp;#x7684;&amp;#x4E00;&amp;#x76F4;&amp;#x662F;&amp;#x6765;&amp;#x6BD4;&amp;#x529B;&amp;#xFF0C;&amp;#x4E0D;&amp;#x77E5;&amp;#x4E3A;&amp;#x4F55;&amp;#x52A0;&amp;#x8F7D;&amp;
        
      
      </description>
      
      <content:encoded><![CDATA[<p>&#x4E4B;&#x524D;&#x7528;&#x7684;&#x4E00;&#x76F4;&#x662F;&#x6765;&#x6BD4;&#x529B;&#xFF0C;&#x4E0D;&#x77E5;&#x4E3A;&#x4F55;&#x52A0;&#x8F7D;&#x5F88;&#x6162;&#xFF0C;&#x800C;&#x4E14;&#x793E;&#x533A;&#x7248;&#x6CA1;&#x6709;&#x90AE;&#x4EF6;&#x767B;&#x5F55;&#x7684;&#x9009;&#x9879;&#xFF0C;&#x6BD4;&#x8F83;&#x4E0D;&#x65B9;&#x4FBF;&#xFF0C;&#x4E8E;&#x662F;&#x4E4E;&#xFF0C;&#x6539;&#x6210;&#x4E86;gitalk&#xFF0C;&#x57FA;&#x4E8E;github issue&#x7684;&#x8BC4;&#x8BBA;&#x63D2;&#x4EF6;&#x3002;<br>&#x539F;&#x7406;&#x662F;&#xFF0C;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x7528;&#x6765;&#x5B58;&#x653E;comment&#x7684;repo&#xFF0C;&#x5C06;&#x6240;&#x6709;&#x7684;comment&#x90FD;&#x653E;&#x5728;&#x7279;&#x5B9A;&#x7684;issue&#x4E0B;&#x3002;</p><h1 id="&#x5199;&#x5728;&#x524D;&#x9762;"><a href="#&#x5199;&#x5728;&#x524D;&#x9762;" class="headerlink" title="&#x5199;&#x5728;&#x524D;&#x9762;"></a>&#x5199;&#x5728;&#x524D;&#x9762;</h1><p><a href="https://github.com/gitalk/gitalk" target="_blank" rel="noopener">&#x5B98;&#x65B9;repo</a></p><h1 id="&#x521B;&#x5EFA;OAuth-application"><a href="#&#x521B;&#x5EFA;OAuth-application" class="headerlink" title="&#x521B;&#x5EFA;OAuth application"></a>&#x521B;&#x5EFA;OAuth application</h1><p>&#x521B;&#x5EFA;&#x4E00;&#x4E2A;github OAuth application&#xFF0C;<a href="https://github.com/settings/applications/new" target="_blank" rel="noopener">&#x70B9;&#x51FB;&#x8FD9;&#x91CC;</a>&#xFF0C;&#x70B9;&#x8FDB;&#x53BB;&#x5982;&#x4E0B;&#xFF1A;<br><img src="/2019/08/20/hexo&#x914D;&#x7F6E;gitalk&#x8BC4;&#x8BBA;&#x63D2;&#x4EF6;/hexo&#x914D;&#x7F6E;gitalk&#x8BC4;&#x8BBA;&#x63D2;&#x4EF6;/1.png" alt="&#x56FE;&#x7247;1"></p><ul><li>Application name: &#x968F;&#x4FBF;&#x5199;</li><li>Homepage url: &#x5199;&#x4F60;&#x7684;&#x535A;&#x5BA2;&#x4E3B;&#x9875;url</li><li>Application description: &#x5E94;&#x7528;&#x7684;&#x63CF;&#x8FF0;</li><li>Authorization callback url: &#x56DE;&#x8C03;url&#xFF0C;&#x5199;&#x4F60;&#x7684;&#x535A;&#x5BA2;url <del>&#x5982;&#x679C;&#x4F60;&#x6709;&#x81EA;&#x5DF1;&#x7684;custom domain&#xFF0C;&#x5199;&#x81EA;&#x5DF1;&#x7684;&#x57DF;&#x540D;</del></li></ul><h1 id="&#x521B;&#x5EFA;&#x4E00;&#x4E2A;github-repo"><a href="#&#x521B;&#x5EFA;&#x4E00;&#x4E2A;github-repo" class="headerlink" title="&#x521B;&#x5EFA;&#x4E00;&#x4E2A;github repo"></a>&#x521B;&#x5EFA;&#x4E00;&#x4E2A;github repo</h1><p>&#x8FD9;&#x4E2A;&#x5F88;&#x7B80;&#x5355;&#xFF0C;&#x4E00;&#x4E2A;&#x7A7A;&#x7684;public&#x7684;repo&#x5C31;&#x884C;&#xFF0C;&#x5148;&#x521B;&#x5728;&#x8FD9;&#x3002;<br><del>&#x79C1;&#x6709;&#x4ED3;&#x5E93;&#x4E0D;&#x77E5;&#x9053;&#x884C;&#x4E0D;&#x884C;&#xFF0C;&#x8C8C;&#x4F3C;&#x66F4;&#x52A0;&#x9690;&#x79C1;</del></p><h1 id="&#x914D;&#x7F6E;hexo&#x914D;&#x7F6E;&#x6587;&#x4EF6;"><a href="#&#x914D;&#x7F6E;hexo&#x914D;&#x7F6E;&#x6587;&#x4EF6;" class="headerlink" title="&#x914D;&#x7F6E;hexo&#x914D;&#x7F6E;&#x6587;&#x4EF6;"></a>&#x914D;&#x7F6E;hexo&#x914D;&#x7F6E;&#x6587;&#x4EF6;</h1><p><em>&#x4EE5;next&#x4E3B;&#x9898;&#x4E3A;&#x4F8B;&#xFF0C;&#x5176;&#x4ED6;&#x4E3B;&#x9898;&#x53EF;&#x80FD;&#x6709;&#x6240;&#x5DEE;&#x522B;</em></p><ol><li><p>&#x65B0;&#x5EFA;<em>gittalk.swig</em>&#x6587;&#x4EF6;</p><ul><li>&#x8DEF;&#x5F84;: <strong>themes/next/layout/_third-party/comments/</strong></li><li>&#x6587;&#x4EF6;&#x5185;&#x5BB9;:</li></ul><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml">   <span class="comment">&lt;!-- gitalk &#x8BC4;&#x8BBA;&#x7CFB;&#x7EDF; 2019.8.19 --&gt;</span></span></span><br><span class="line"><span class="xml"></span><span class="template-tag">{% <span class="name"><span class="name">if</span></span> page.comments &amp;&amp; theme.gitalk.enable %}</span><span class="xml"></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">const gitalk = new Gitalk({</span></span><br><span class="line"><span class="xml">  clientID: &apos;</span><span class="template-variable">{{theme.gitalk.clientID}}</span><span class="xml">&apos;,</span></span><br><span class="line"><span class="xml">  clientSecret: &apos;</span><span class="template-variable">{{theme.gitalk.clientSecret}}</span><span class="xml">&apos;,</span></span><br><span class="line"><span class="xml">  repo: &apos;</span><span class="template-variable">{{theme.gitalk.repo}}</span><span class="xml">&apos;,</span></span><br><span class="line"><span class="xml">  owner: &apos;</span><span class="template-variable">{{theme.gitalk.githubID}}</span><span class="xml">&apos;,</span></span><br><span class="line"><span class="xml">  admin: [&apos;</span><span class="template-variable">{{theme.gitalk.adminUser}}</span><span class="xml">&apos;],// &#x6CE8;&#x610F;&#x4F7F;&#x7528;&#x5217;&#x8868;</span></span><br><span class="line"><span class="xml">  id: location.pathname, // &#x4F9D;&#x636E;&#x5B98;&#x65B9;readme,&#x8FD9;&#x91CC;&#x53EF;&#x80FD;&#x4F1A;&#x6709;bug, post lable&#x957F;&#x5EA6;&#x8D85;&#x8FC7;50&#x4F1A;&#x6709;&#x62A5;&#x9519;</span></span><br><span class="line"><span class="xml">})</span></span><br><span class="line"><span class="xml">gitalk.render(&apos;gitalk-container&apos;)</span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span><span class="template-tag">{% <span class="name"><span class="name">endif</span></span> %}</span><span class="xml"></span></span><br></pre></td></tr></table></figure></li></ol><ol start="2"><li><p>&#x4FEE;&#x6539;<em>index.swig</em>&#x6587;&#x4EF6;</p><ul><li>&#x8DEF;&#x5F84;: <strong>themes/next/layout/_third-party/comments/</strong></li><li>&#x4FEE;&#x6539;&#x5185;&#x5BB9;:<br>&#x5728;&#x6587;&#x4EF6;&#x6700;&#x540E;&#x4E00;&#x884C;&#x8FFD;&#x52A0;&#x4E0B;&#x5217;&#x8BED;&#x53E5;:</li></ul><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"></span><span class="template-tag">{% <span class="name"><span class="name">include</span></span> &apos;gitalk.swig&apos; %}</span><span class="xml"></span></span><br></pre></td></tr></table></figure></li></ol><ol start="3"><li><p>&#x4FEE;&#x6539;<em>comment.swig</em>&#x6587;&#x4EF6;</p><ul><li>&#x8DEF;&#x5F84;: <strong>/themes/next/layout/_partials/</strong></li><li>&#x4FEE;&#x6539;&#x5185;&#x5BB9;:</li></ul><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"> </span><span class="template-tag">{% <span class="name">elseif</span> theme.valine.appid and theme.valine.appkey %}</span><span class="xml"></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;comments&quot;</span> <span class="attr">id</span>=<span class="string">&quot;comments&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span>// &#x5728;&#x8FD9;&#x4E00;&#x884C;&#x7684;&#x4E0B;&#x4E00;&#x884C;&#x5F00;&#x59CB;&#x52A0;</span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml"> </span><span class="template-tag">{% <span class="name">elseif</span> theme.gitalk.enable %}</span><span class="xml">// &#x52A0;&#x5165;&#x4EE5;&#x4E0B;&#x4E09;&#x884C;</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;comments&quot;</span> <span class="attr">id</span>=<span class="string">&quot;comments&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;gitalk-container&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml"> </span><span class="template-tag">{% <span class="name"><span class="name">endif</span></span> %}</span><span class="xml"></span></span><br><span class="line"><span class="xml"></span><span class="template-tag">{% <span class="name"><span class="name">endif</span></span> %}</span><span class="xml"></span></span><br></pre></td></tr></table></figure></li></ol><ol start="4"><li><p>&#x4FEE;&#x6539;&#x4E3B;&#x9898;&#x914D;&#x7F6E;&#x6587;&#x4EF6;<em>_config.yml</em></p><ol><li>&#x6587;&#x4EF6;&#x8DEF;&#x5F84;: <strong>/themes/</strong></li><li>&#x4FEE;&#x6539;&#x5185;&#x5BB9;:</li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">   <span class="comment">#gitalk&#x8BC4;&#x8BBA;</span></span><br><span class="line"><span class="attr">gitalk:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  githubID:</span> <span class="string">github&#x7528;&#x6237;&#x540D;</span></span><br><span class="line"><span class="attr">  repo:</span> <span class="string">&#x7528;&#x6765;&#x5B58;&#x653E;comment&#x7684;repo</span></span><br><span class="line"><span class="attr">  clientID:</span> <span class="string">&#x4F60;&#x7684;clientID</span></span><br><span class="line"><span class="attr">  clientSecret:</span> <span class="string">&#x4F60;&#x7684;clientSecret</span></span><br><span class="line"><span class="attr">  adminUser:</span> <span class="string">admin&#x7528;&#x6237;&#xFF0C;&#x53EA;&#x6709;admin&#x624D;&#x53EF;&#x4EE5;init</span> <span class="string">issue</span></span><br><span class="line"><span class="attr">  perPage:</span> <span class="number">15</span></span><br><span class="line"><span class="attr">  pagerDirection:</span> <span class="string">last</span></span><br><span class="line"><span class="attr">  createIssueManually:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">  distractionFreeMode:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure></li></ol><h1 id="&#x6D4B;&#x8BD5;"><a href="#&#x6D4B;&#x8BD5;" class="headerlink" title="&#x6D4B;&#x8BD5;"></a>&#x6D4B;&#x8BD5;</h1><p><code>hexo clean</code></p><p><code>hexo g</code></p><p><code>hexo d</code></p><h2 id="&#x6700;&#x7EC8;&#x7ED3;&#x679C;"><a href="#&#x6700;&#x7EC8;&#x7ED3;&#x679C;" class="headerlink" title="&#x6700;&#x7EC8;&#x7ED3;&#x679C;"></a>&#x6700;&#x7EC8;&#x7ED3;&#x679C;</h2><p><img src="/2019/08/20/hexo&#x914D;&#x7F6E;gitalk&#x8BC4;&#x8BBA;&#x63D2;&#x4EF6;/hexo&#x914D;&#x7F6E;gitalk&#x8BC4;&#x8BBA;&#x63D2;&#x4EF6;/2.png" alt="&#x56FE;&#x7247;2"></p><h1 id="&#x8E29;&#x8FC7;&#x7684;&#x5751;"><a href="#&#x8E29;&#x8FC7;&#x7684;&#x5751;" class="headerlink" title="&#x8E29;&#x8FC7;&#x7684;&#x5751;"></a>&#x8E29;&#x8FC7;&#x7684;&#x5751;</h1><ul><li><em>comment.swig</em>&#x6587;&#x4EF6;&#x914D;&#x7F6E;&#x9519;&#x8BEF;&#xFF0C;&#x6CE8;&#x610F;&#x6240;&#x52A0;&#x4EE3;&#x7801;&#x7684;&#x4F4D;&#x7F6E;</li><li><em>OAuth application</em>&#x521B;&#x5EFA;&#x6709;&#x9519;&#x8BEF;&#xFF0C;&#x6309;&#x4EE5;&#x4E0A;&#x505A;&#x6CD5;&#x5373;&#x53EF;</li><li>&#x7C97;&#x5FC3;&#x3001;&#x5927;&#x5C0F;&#x5199;&#x3001;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x5199;&#x9519;</li></ul><h1 id="&#x5199;&#x5728;&#x540E;&#x9762;"><a href="#&#x5199;&#x5728;&#x540E;&#x9762;" class="headerlink" title="&#x5199;&#x5728;&#x540E;&#x9762;"></a>&#x5199;&#x5728;&#x540E;&#x9762;</h1><p>&#x4E0D;&#x77E5;&#x9053;&#x4E3A;&#x4EC0;&#x4E48;&#x5728;hexo&#x4E2D;markdown&#x4F1A;&#x89E3;&#x6790;&#x5947;&#x602A;&#x7684;&#x4E1C;&#x897F;&#xFF0C;&#x6BD4;&#x5982;&#x8BF4;&#x6211;&#x5199;&#x4E86;`&lt;!&#x2013;&#xFFFC;4&#x2013;&gt;`&#x8FD9;&#x4E2A;&#x4E1C;&#x897F;&#xFF0C;&#x5728;<code>hexo g</code>&#x7684;&#x8FC7;&#x7A0B;&#x4E2D;&#xFF0C;&#x4F1A;&#x62A5;&#x9519;&#xFF0C;&#x5F88;&#x5947;&#x602A;&#x7684;&#x9519;&#x8BEF;&#x3002;<br>&#x540E;&#x6765;&#x628A;&#x8FD9;&#x4E2A;post&#x5220;&#x9664;&#x4E86;&#xFF0C;&#x518D;&#x751F;&#x6210;&#x5C31;&#x6CA1;&#x6709;&#x95EE;&#x9898;&#x4E86;&#xFF0C;&#x6240;&#x4EE5;&#x8BF4;&#xFF0C;&#x53EF;&#x4EE5;&#x786E;&#x5B9A;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x662F;&#x51FA;&#x5728;&#x6211;&#x521A;&#x521A;&#x5199;&#x7684;<code>.md</code>&#x6587;&#x4EF6;&#x5185;&#x5BB9;&#x5BFC;&#x81F4;&#x7684;&#x3002;</p><h2 id="&#x89E3;&#x51B3;&#x6B65;&#x9AA4;"><a href="#&#x89E3;&#x51B3;&#x6B65;&#x9AA4;" class="headerlink" title="&#x89E3;&#x51B3;&#x6B65;&#x9AA4;"></a>&#x89E3;&#x51B3;&#x6B65;&#x9AA4;</h2><ul><li>&#x5220;&#x9664;&#x6240;&#x6709;&#x4EE3;&#x7801;&#x5757;&#xFF0C;&#x9519;&#x8BEF;&#x6D88;&#x5931;&#xFF0C;&#x8FD8;&#x539F;&#x6240;&#x6709;&#x5185;&#x5BB9;</li><li>&#x5220;&#x9664;`&lt;!&#x2013;&#xFFFC;5&#x2013;&gt;`&#x8FD9;&#x4E2A;&#x5185;&#x5BB9;&#xFF0C;&#x9519;&#x8BEF;&#x6D88;&#x5931;<br>&#x81F3;&#x6B64;&#xFF0C;&#x53EF;&#x4EE5;&#x77E5;&#x9053;&#xFF0C;&#x95EE;&#x9898;&#x5C31;&#x51FA;&#x5728;`&lt;!&#x2013;&#xFFFC;6&#x2013;&gt;`&#x8FD9;&#x6BB5;&#x5185;&#x5BB9;&#x91CC;&#xFF0C;&#x540E;&#x6765;&#x6539;&#x6210;```&#x5305;&#x542B;&#x7684;&#x4EE3;&#x7801;&#x5757;&#x5C31;&#x6CA1;&#x6709;&#x95EE;&#x9898;&#x3002;<br>&#x6240;&#x4EE5;&#x8BF4;&#xFF0C;&#x9047;&#x5230;<code>\{\%</code>&#x8FD9;&#x6837;&#x7684;&#x5B57;&#x7B26;&#x9700;&#x8981;&#x8F6C;&#x4E49;&#xFF0C;&#x5426;&#x5219;&#x4F1A;&#x88AB;md&#x89E3;&#x6790;&#x3002;<h2 id="TODO"><a href="#TODO" class="headerlink" title="TODO"></a>TODO</h2>&#x8FD9;&#x91CC;&#x8FD8;&#x8981;&#x6DF1;&#x5165;&#x4E86;&#x89E3;&#x4E00;&#x4E0B;md&#x7684;&#x89E3;&#x6790;&#x539F;&#x7406;</li></ul>]]></content:encoded>
      
      <comments>http://www.qianjipeng.top/2019/08/20/hexo%E9%85%8D%E7%BD%AEgitalk%E8%AF%84%E8%AE%BA%E6%8F%92%E4%BB%B6/hexo%E9%85%8D%E7%BD%AEgitalk%E8%AF%84%E8%AE%BA%E6%8F%92%E4%BB%B6/#disqus_thread</comments>
    </item>
    
    <item>
      <title>java web 学习开篇</title>
      <link>http://www.qianjipeng.top/2019/08/20/java%20web%20%E5%AD%A6%E4%B9%A0%E5%BC%80%E7%AF%87/</link>
      <guid>http://www.qianjipeng.top/2019/08/20/java%20web%20%E5%AD%A6%E4%B9%A0%E5%BC%80%E7%AF%87/</guid>
      <pubDate>Mon, 19 Aug 2019 16:00:00 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;&amp;#x5199;&amp;#x5728;&amp;#x524D;&amp;#x9762;&quot;&gt;&lt;a href=&quot;#&amp;#x5199;&amp;#x5728;&amp;#x524D;&amp;#x9762;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x5199;&amp;#x5728;&amp;#x524D;&amp;#x9
        
      
      </description>
      
      <content:encoded><![CDATA[<h1 id="&#x5199;&#x5728;&#x524D;&#x9762;"><a href="#&#x5199;&#x5728;&#x524D;&#x9762;" class="headerlink" title="&#x5199;&#x5728;&#x524D;&#x9762;"></a>&#x5199;&#x5728;&#x524D;&#x9762;</h1><p>&#x4EE5;&#x524D;&#x5176;&#x5B9E;&#x633A;&#x770B;&#x4E0D;&#x4E0A;&#x524D;&#x7AEF;coder&#x7684;(&#x8BE5;&#x6B7B;&#x7684;&#x7A0B;&#x5E8F;&#x5458;&#x9119;&#x89C6;&#x94FE;: C++ &gt; C &gt; JAVA &gt; PHP &gt; HTML &#x2026;)&#xFF0C;&#x7A76;&#x5176;&#x539F;&#x56E0;&#xFF0C;&#x6211;&#x4E2A;&#x4EBA;&#x8BA4;&#x4E3A;&#xFF0C;&#x505A;C++&#x7684;&#xFF0C;&#x4EE5;&#x540E;&#x53EF;&#x5F88;&#x81EA;&#x8C6A;&#x7684;&#x8BF4;&#xFF1A;&#x3000;&#x6211;&#x662F;&#x505A;C++&#x7684;&#x3002;<br>&#x53EF;&#x662F;&#xFF0C;&#x6211;&#x4EEC;&#x771F;&#x7684;&#x61C2;C++&#x4E86;&#x5417;&#xFF1F;<br>&#x8FD9;&#x8981;&#x770B;&#x6211;&#x4EEC;&#x5BF9;<em>&#x61C2;</em>&#x7684;&#x5B9A;&#x4E49;&#x4E86;&#xFF0C;&#x4F60;&#x8981;&#x8BF4;&#x6211;&#x4F1A;&#x7528;C++&#x5F00;&#x53D1;&#x4E00;&#x4E2A;&#x5766;&#x514B;&#x5927;&#x6218;&#xFF0C;&#x6211;&#x4F1A;&#x7528;C++&#x5F00;&#x53D1;&#x4E00;&#x4E2A;&#x7BA1;&#x7406;&#x7CFB;&#x7EDF;&#xFF0C;&#x6211;&#x4F1A;&#x7528;C++&#xFF0C;&#x6211;&#x61C2;C++&#x4E86;&#x3002;&#x8FD9;&#x6837;&#x5176;&#x5B9E;&#x4E5F;&#x6CA1;&#x9519;&#xFF0C;&#x53EF;&#x662F;C++&#x8FD9;&#x95E8;&#x7279;&#x6B8A;&#x7684;&#x8BED;&#x8A00;&#xFF0C;&#x5B83;&#x6240;&#x8868;&#x73B0;&#x7684;&#x5E76;&#x4E0D;&#x53EA;&#x662F;&#x9762;&#x5411;&#x5BF9;&#x8C61;&#x7684;&#x7279;&#x6027;&#x3002;&#x4E1A;&#x754C;&#x6709;&#x53E5;&#x8BDD;&#x8BF4;&#x7684;C++: <em>&#x4F60;&#x6C38;&#x8FDC;&#x4E0D;&#x77E5;&#x9053;C++&#x7F16;&#x8BD1;&#x5668;&#x80CC;&#x7740;&#x4F60;&#x5E72;&#x4E86;&#x54EA;&#x4E9B;&#x4E8B;</em>&#x3002;&#x8FD9;&#x53E5;&#x8BDD;&#x5176;&#x5B9E;&#x6211;&#x5F88;&#x8BA4;&#x540C;&#x3002;<br>&#x4F8B;&#x5982;:</p><ul><li>&#x9ED8;&#x8BA4;&#x6784;&#x9020;&#x51FD;&#x6570;&#x5728;&#x4EC0;&#x4E48;&#x60C5;&#x51B5;&#x4E0B;&#x7F16;&#x8BD1;&#x5668;&#x4F1A;&#x4E3A;&#x6211;&#x4EEC;&#x63D0;&#x4F9B;&#xFF1F;<ul><li>&#x7B54;&#x6848;&#x662F;&#xFF1A;&#x3000;&#x5728;&#x7A0B;&#x5E8F;&#x5458;&#x6CA1;&#x6709;&#x81EA;&#x5DF1;&#x5B9A;&#x4E49;&#x6784;&#x9020;&#x51FD;&#x6570;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x7F16;&#x8BD1;&#x5668;&#x4F1A;&#x4E3A;&#x6211;&#x4EEC;&#x63D0;&#x4F9B;&#x4E00;&#x4E2A;&#x9ED8;&#x8BA4;&#x7684;&#x65E0;&#x53C2;&#x7684;&#x6784;&#x9020;&#x51FD;&#x6570;&#xFF0C;&#x4E00;&#x65E6;&#x7A0B;&#x5E8F;&#x5458;&#x5B9A;&#x4E49;&#x4E86;&#x6784;&#x9020;&#x51FD;&#x6570;&#xFF0C;&#x9ED8;&#x8BA4;&#x7684;&#x6784;&#x9020;&#x51FD;&#x6570;&#x4FBF;&#x4E0D;&#x518D;&#x88AB;&#x63D0;&#x4F9B;&#x3002;</li></ul></li><li>C++&#x7684;&#x865A;&#x51FD;&#x6570;&#x673A;&#x5236;&#x662F;&#x4EC0;&#x4E48;&#x6837;&#x7684;&#xFF1F;<ul><li>&#x5C31;&#x6211;&#x6240;&#x4E86;&#x89E3;&#x7684;&#xFF0C;&#x865A;&#x51FD;&#x6570;&#x673A;&#x5236;&#x662F;&#x9760;&#x865A;&#x51FD;&#x6570;&#x8868;<em>VTable</em>&#x548C;&#x865A;&#x51FD;&#x6570;&#x6307;&#x9488;<em>VPtr</em>&#x6765;&#x5B9E;&#x73B0;&#x7684;&#xFF0C;VTable&#x91CC;&#x5B58;&#x653E;&#x4E86;&#x865A;&#x51FD;&#x6570;&#x7684;&#x51FD;&#x6570;&#x5730;&#x5740;&#x2026;(&#x79FB;&#x6B65;&#x4FAF;&#x6377;&#x5927;&#x5E08;&#x8BD1;&#x4F5C;<a href="https://baike.baidu.com/item/%E6%B7%B1%E5%BA%A6%E6%8E%A2%E7%B4%A2C%2B%2B%E5%AF%B9%E8%B1%A1%E6%A8%A1%E5%9E%8B" target="_blank" rel="noopener">&#x6DF1;&#x5EA6;&#x63A2;&#x7D22;C++&#x5BF9;&#x8C61;&#x6A21;&#x578B;</a>)</li></ul></li></ul><p>C++&#x662F;&#x4E00;&#x95E8;Magic&#x7684;&#x8BED;&#x8A00;&#xFF0C;&#x8981;&#x60F3;&#x5B66;&#x597D;C++&#x3001;&#x7528;&#x597D;C++&#xFF0C;&#x5FC5;&#x987B;&#x8981;&#x638C;&#x63E1;&#x6DF1;&#x5C42;&#x6B21;&#x7684;&#x5185;&#x5BB9;&#xFF0C;&#x4F5C;&#x4E3A;&#x4E00;&#x53EA;&#x91CE;&#x751F;&#x7A0B;&#x5E8F;&#x5458;(&#x59D1;&#x4E14;&#x5141;&#x8BB8;&#x6211;&#x81EA;&#x79F0;&#x4E3A;&#x7A0B;&#x5E8F;&#x5458;)&#xFF0C;&#x6211;&#x8BA4;&#x4E3A;&#x6211;&#x662F;&#x4E0D;&#x61C2;C++&#x7684;&#x3002;&#x8981;&#x5B66;&#x597D;C++&#xFF0C;&#x65F6;&#x95F4;&#x6210;&#x672C;&#x5F88;&#x9AD8;&#xFF0C;&#x4F46;&#x662F;&#x4E00;&#x65E6;&#x6709;&#x6240;&#x9886;&#x609F;&#xFF0C;&#x624D;&#x7B97;&#x662F;&#x5165;&#x95E8;&#x4E86;C++&#xFF0C;&#x5C31;&#x76F4;&#x63A5;&#x53EF;&#x4EE5;&#x4F5C;&#x4E3A;&#x996D;&#x7897;&#x3002;&#x5426;&#x5219;&#xFF0C;&#x53EA;&#x4F1A;&#x642C;&#x8D77;&#x77F3;&#x5934;&#x7838;&#x81EA;&#x5DF1;&#x7684;&#x811A;&#x3002;<br>&#x81F3;&#x4E8E;&#x4E3A;&#x4EC0;&#x4E48;&#x8981;&#x5B66;&#x4E60;&#x524D;&#x7AEF;&#x77E5;&#x8BC6;&#x5462;&#xFF1F;</p><ul><li>B/S&#x6A21;&#x5F0F;&#x5411;C/S&#x6A21;&#x5F0F;&#x8F6C;&#x53D8;&#x7684;&#x8D8B;&#x5411;<br>  &#x5F53;&#x4E0B;&#x968F;&#x7740;&#x6D4F;&#x89C8;&#x5668;&#x6280;&#x672F;&#x7684;&#x4E0D;&#x65AD;&#x53D1;&#x5C55;&#x548C;&#x8BA1;&#x7B97;&#x673A;&#x786C;&#x4EF6;&#x6C34;&#x5E73;&#x7684;&#x4E0D;&#x65AD;&#x63D0;&#x9AD8;&#xFF0C;C/S&#x6A21;&#x5F0F;(&#x5373;&#x5BA2;&#x6237;&#x7AEF;/&#x670D;&#x52A1;&#x7AEF;&#x6A21;&#x5F0F;)&#x5DF2;&#x7ECF;&#x4E0D;&#x80FD;&#x6EE1;&#x8DB3;&#x7528;&#x6237;&#x7684;&#x9700;&#x6C42;&#x3001;&#x6216;&#x8005;&#x8BF4;&#x5F00;&#x53D1;&#x7EF4;&#x62A4;&#x6210;&#x672C;&#x9AD8;&#xFF0C;&#x6BD4;&#x5982;&#xFF1A;&#x52A8;&#x6001;&#x4EA4;&#x4E92;&#x3001;&#x53EF;&#x79FB;&#x690D;&#x6027;&#xFF0C;&#x8FD9;&#x4E9B;C/S&#x6A21;&#x5F0F;&#x4E0B;&#x90FD;&#x5F88;&#x96BE;&#x53BB;&#x5B9E;&#x73B0;</li><li>&#x589E;&#x52A0;&#x6280;&#x672F;&#x6808;<br>  &#x4FD7;&#x8BDD;&#x8BF4;&#x6280;&#x591A;&#x4E0D;&#x538B;&#x8EAB;(&#x4F55;&#x51B5;&#x201D;&#x6280;&#x201C;&#x4E5F;&#x4E0D;&#x591A;)&#xFF0C;&#x76EE;&#x524D;&#x53EA;&#x662F;&#x7B80;&#x5355;&#x5B66;&#x4E86;C&#x3001;C++&#x3001;Python&#x3001;JAVA&#xFF0C;&#x4F5C;&#x4E3A;&#x4E00;&#x540D;&#x975E;&#x79D1;&#x73ED;coder&#xFF0C;&#x4EFB;&#x91CD;&#x9053;&#x8FDC;&#x554A;&#x3002;&#x518D;&#x8005;&#xFF0C;&#x4E4B;&#x524D;&#x8001;&#x5E08;&#x6709;&#x627E;&#x6211;&#x505A;&#x4E2A;&#x4E00;&#x4E2A;&#x4E92;&#x8054;&#x7F51;+&#x7684;&#x9879;&#x76EE;&#xFF0C;&#x7531;&#x4E8E;&#x7F3A;&#x5C11;&#x524D;&#x7AEF;&#x5F00;&#x53D1;&#x7ECF;&#x9A8C;&#xFF0C;&#x867D;&#x7136;&#x60F3;&#x63A5;&#x624B;&#xFF0C;&#x4F46;&#x662F;&#x8FD8;&#x662F;&#x62D2;&#x7EDD;&#x4E86;&#x8001;&#x5E08;&#x3002;&#x540E;&#x6765;&#x60F3;&#x60F3;&#x633A;&#x540E;&#x6094;&#x7684;&#x3002;&#x4E8E;&#x662F;&#x4E4E;&#xFF0C;&#x6253;&#x7B97;&#x8FD9;&#x4E2A;&#x6691;&#x5047;&#x8FDB;&#x51FB;JSP&#xFF0C;&#x76EE;&#x6807;&#x662F;&#x5F00;&#x53D1;&#x51FA;&#x4E00;&#x4E2A;web&#x7BA1;&#x7406;&#x4FE1;&#x606F;&#x7CFB;&#x7EDF;&#x3002;</li><li>&#x653E;&#x5F03;C++&#xFF0C;&#x8F6C;&#x5411;java?<br>  &#x771F;&#x7684;&#x662F;&#xFF0C;&#x8D8A;&#x5B66;&#x8D8A;&#x53D1;&#x73B0;&#x81EA;&#x5DF1;&#x8D8A;&#x83DC;&#x3002;&#x76F8;&#x6BD4;&#x8F83;&#x4E8E;C++&#xFF0C;JAVA&#x66F4;&#x5BB9;&#x6613;&#x80FD;&#x591F;&#x5B9E;&#x73B0;&#x4E00;&#x4E9B;&#x4E1C;&#x897F;&#xFF0C;&#x4F30;&#x8BA1;&#x4EE5;&#x540E;&#x81EA;&#x5DF1;&#x4F1A;&#x8D70;JAVA&#x65B9;&#x5411;&#x7684;&#x5427;&#xFF1F;&#x5F53;&#x7136;C++&#x4E5F;&#x4F1A;&#x6301;&#x7EED;&#x6316;&#x6398;&#x7684;&#x3002;</li></ul><h1 id="&#x5B66;&#x4E60;&#x8FC7;&#x7A0B;"><a href="#&#x5B66;&#x4E60;&#x8FC7;&#x7A0B;" class="headerlink" title="&#x5B66;&#x4E60;&#x8FC7;&#x7A0B;"></a>&#x5B66;&#x4E60;&#x8FC7;&#x7A0B;</h1><p>&#x76EE;&#x524D;&#x6B63;&#x5728;&#x72C2;&#x8865;&#x77E5;&#x8BC6;&#xFF0C;&#x987A;&#x4FBF;&#x5B9E;&#x73B0;&#x4E00;&#x4E0B;&#x914D;&#x5957;&#x7684;&#x5C0F;demo&#xFF0C;&#x5148;&#x5199;&#x5230;&#x8FD9;&#x91CC;&#xFF0C;&#x5F85;&#x5B9E;&#x6218;&#x9047;&#x5230;&#x95EE;&#x9898;&#x65F6;&#xFF0C;&#x518D;&#x66F4;&#x3002;</p>]]></content:encoded>
      
      <comments>http://www.qianjipeng.top/2019/08/20/java%20web%20%E5%AD%A6%E4%B9%A0%E5%BC%80%E7%AF%87/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Hello World</title>
      <link>http://www.qianjipeng.top/2019/08/17/hello-world/</link>
      <guid>http://www.qianjipeng.top/2019/08/17/hello-world/</guid>
      <pubDate>Sat, 17 Aug 2019 13:25:13 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
        
      
      </description>
      
      <content:encoded><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content:encoded>
      
      <comments>http://www.qianjipeng.top/2019/08/17/hello-world/#disqus_thread</comments>
    </item>
    
    <item>
      <title>数据结构之进制转换</title>
      <link>http://www.qianjipeng.top/2019/08/17/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E8%BF%9B%E5%88%B6%E8%BD%AC%E6%8D%A2/</link>
      <guid>http://www.qianjipeng.top/2019/08/17/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E8%BF%9B%E5%88%B6%E8%BD%AC%E6%8D%A2/</guid>
      <pubDate>Sat, 17 Aug 2019 13:08:05 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;&amp;#x6808;&amp;#x7684;&amp;#x4ECB;&amp;#x7ECD;&quot;&gt;&lt;a href=&quot;#&amp;#x6808;&amp;#x7684;&amp;#x4ECB;&amp;#x7ECD;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x6808;&amp;#x7684;&amp;#x4ECB;&amp;#x7
        
      
      </description>
      
      <content:encoded><![CDATA[<h1 id="&#x6808;&#x7684;&#x4ECB;&#x7ECD;"><a href="#&#x6808;&#x7684;&#x4ECB;&#x7ECD;" class="headerlink" title="&#x6808;&#x7684;&#x4ECB;&#x7ECD;"></a>&#x6808;&#x7684;&#x4ECB;&#x7ECD;</h1><ul><li>&#x5B9A;&#x4E49;:<br> &#x6808;&#x662F;&#x4E00;&#x79CD;&#x6570;&#x636E;&#x7ED3;&#x6784;&#xFF0C;&#x4E00;&#x79CD;&#x7279;&#x6B8A;&#x7684;&#x7EBF;&#x6027;&#x8868;</li><li>&#x7279;&#x70B9;:<ul><li>&#x53EA;&#x5141;&#x8BB8;&#x5728;&#x4E00;&#x7AEF;&#x8FDB;&#x884C;&#x63D2;&#x5165;&#x64CD;&#x4F5C;&#xFF0C;&#x53E6;&#x4E00;&#x7AEF;&#x8FDB;&#x884C;&#x5220;&#x9664;&#x64CD;&#x4F5C;</li><li>&#x5143;&#x7D20;&#x6EE1;&#x8DB3;&#x5148;&#x8FDB;&#x540E;&#x51FA;&#x539F;&#x5219;&#xFF0C;&#x5373;&#x5148;&#x5165;&#x6808;&#x7684;&#x5143;&#x7D20;&#x6700;&#x540E;&#x51FA;&#x6808;</li></ul></li></ul><h1 id="&#x7B97;&#x6CD5;&#x8BE6;&#x89E3;"><a href="#&#x7B97;&#x6CD5;&#x8BE6;&#x89E3;" class="headerlink" title="&#x7B97;&#x6CD5;&#x8BE6;&#x89E3;"></a>&#x7B97;&#x6CD5;&#x8BE6;&#x89E3;</h1><p>&#x7B97;&#x6CD5;&#x5F88;&#x7B80;&#x5355;&#xFF0C;&#x9664;&#xFF38;&#x53D6;&#x4F59;&#x6CD5;&#xFF0C;&#x7528;&#x6808;&#x6765;&#x628A;&#x4F59;&#x6570;&#x5B58;&#x8D77;&#x6765;&#xFF0C;&#x518D;&#x51FA;&#x6808;&#x5373;&#x53EF;<br>&#x4E0A;&#x4EE3;&#x7801;: </p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxsize 10</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> </span></span><br><span class="line"><span class="class">{</span></span><br><span class="line">    <span class="keyword">int</span> data[maxsize];</span><br><span class="line">    <span class="keyword">int</span> top;</span><br><span class="line">}seqstack, *pseqstack;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function">pseqstack <span class="title">init_stack</span><span class="params">()</span></span>{</span><br><span class="line">    pseqstack s = (pseqstack)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(seqstack));</span><br><span class="line">    <span class="keyword">if</span>(s){</span><br><span class="line">        s -&gt; top = <span class="number">-1</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> s;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">push_stack</span><span class="params">(pseqstack s, <span class="keyword">int</span> e)</span></span>{</span><br><span class="line">    <span class="keyword">if</span> (!s || s -&gt; top &gt; maxsize <span class="number">-1</span>){</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;&#x5165;&#x6808;&#x5931;&#x8D25;!\n&quot;</span>);</span><br><span class="line">        <span class="comment">//return 0;</span></span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">else</span>{</span><br><span class="line">        s -&gt; top ++;        <span class="comment">/*&#x4E00;&#x5B9A;&#x8981;&#x5148;&#x628A;&#xFF34;&#xFF2F;&#xFF30;&#x52A0;&#x4E00;&#xFF0C;&#x5426;&#x5219;top &#x539F;&#x6765;&#x662F;&#xFF0D;&#xFF11;,&#x5BFC;&#x81F4;&#x7B2C;&#x4E00;&#x4E2A;&#x5143;&#x7D20;&#x5165;&#x6808;&#x5931;&#x8D25;(bug fixed!)&#x3000;*/</span></span><br><span class="line">        s -&gt; data[s -&gt; top] = e;</span><br><span class="line">        <span class="comment">//return 1;</span></span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">pop_stack</span><span class="params">(pseqstack s, <span class="keyword">int</span> *x)</span></span>{</span><br><span class="line">    <span class="keyword">if</span> (!s || s -&gt; top == <span class="number">-1</span>){</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;&#x51FA;&#x6808;&#x5931;&#x8D25;!\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">else</span>{</span><br><span class="line">        *x = s -&gt; data[s -&gt; top];</span><br><span class="line">        s -&gt; top --;</span><br><span class="line">        <span class="keyword">return</span> *x;</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">/*&#x3000;&#x8F93;&#x51FA;&#x6808;&#x7684;&#x6BCF;&#x4E00;&#x4E2A;&#x5143;&#x7D20;&#x3000;*/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print_each</span><span class="params">(pseqstack s)</span></span>{</span><br><span class="line">    <span class="keyword">int</span> top0 = s-&gt;top;</span><br><span class="line">    <span class="keyword">while</span>(top0 != <span class="number">-1</span>){</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, s-&gt;data[top0]);</span><br><span class="line">        top0 --;</span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">/*&#x8FDB;&#x5236;&#x8F6C;&#x6362;&#xFF0C;x&#x662F;&#x5341;&#x8FDB;&#x5236;de &#x6570;&#xFF0C;y &#x662F;&#x5F85;&#x8F6C;&#x6362;&#x8FDB;&#x5236;*/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">transfer</span><span class="params">(pseqstack s, <span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span>{</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span> res;</span><br><span class="line">    <span class="comment">/* &#x3000;&#x6574;&#x9664;&#x540E;&#x4E0D;&#x7B49;&#x4E8E;&#xFF10;&#xFF0C;&#x3000;&#x6267;&#x884C;&#x5FAA;&#x73AF; */</span></span><br><span class="line">    <span class="keyword">while</span>(x != <span class="number">0</span>){</span><br><span class="line">        push_stack(s, (x%y));</span><br><span class="line">        x = x / y;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">//printf(&quot;%d\n&quot;, s-&gt;top);</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/*&#x3000;&#x52A0;&#x4E0A;&#x8F93;&#x51FA;&#x529F;&#x80FD;&#x3000;*/</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span>(s-&gt; top != <span class="number">-1</span>){</span><br><span class="line">        pop_stack(s, &amp;res);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, res);</span><br><span class="line">        <span class="keyword">if</span> (s-&gt;top == <span class="number">-1</span>){</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span> num;        <span class="comment">// &#x5341;&#x8FDB;&#x5236;&#x6570;</span></span><br><span class="line">    <span class="keyword">int</span> scale;      <span class="comment">// &#x8981;&#x8F6C;&#x6362;&#x7684;&#x8FDB;&#x5236;&#x6570;</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;&#x8F93;&#x5165;&#x5341;&#x8FDB;&#x5236;&#x6570;&#x5B57;&#xFF0C;&#x8FDB;&#x5236;&#x6570;: &quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;num, &amp;scale);</span><br><span class="line"></span><br><span class="line">    pseqstack S = init_stack();</span><br><span class="line">    transfer(S, num, scale);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//print_each(S);</span></span><br><span class="line">    </span><br><span class="line">}</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>http://www.qianjipeng.top/2019/08/17/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E8%BF%9B%E5%88%B6%E8%BD%AC%E6%8D%A2/#disqus_thread</comments>
    </item>
    
    <item>
      <title>数据结构之约瑟夫问题的求解</title>
      <link>http://www.qianjipeng.top/2019/08/17/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E7%BA%A6%E7%91%9F%E5%A4%AB%E9%97%AE%E9%A2%98%E7%9A%84%E6%B1%82%E8%A7%A3/</link>
      <guid>http://www.qianjipeng.top/2019/08/17/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E7%BA%A6%E7%91%9F%E5%A4%AB%E9%97%AE%E9%A2%98%E7%9A%84%E6%B1%82%E8%A7%A3/</guid>
      <pubDate>Sat, 17 Aug 2019 13:00:38 GMT</pubDate>
      <description>
      
        
        
          &lt;h1 id=&quot;&amp;#x95EE;&amp;#x9898;&amp;#x4ECB;&amp;#x7ECD;&quot;&gt;&lt;a href=&quot;#&amp;#x95EE;&amp;#x9898;&amp;#x4ECB;&amp;#x7ECD;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x95EE;&amp;#x9898;&amp;#x4ECB;&amp;#x7
        
      
      </description>
      
      <content:encoded><![CDATA[<h1 id="&#x95EE;&#x9898;&#x4ECB;&#x7ECD;"><a href="#&#x95EE;&#x9898;&#x4ECB;&#x7ECD;" class="headerlink" title="&#x95EE;&#x9898;&#x4ECB;&#x7ECD;"></a>&#x95EE;&#x9898;&#x4ECB;&#x7ECD;</h1><p><a href="https://baike.baidu.com/item/%E7%BA%A6%E7%91%9F%E5%A4%AB%E9%97%AE%E9%A2%98" target="_blank" rel="noopener">&#x7EA6;&#x745F;&#x592B;&#x95EE;&#x9898;</a></p><h1 id="&#x6C42;&#x89E3;&#x65B9;&#x6848;"><a href="#&#x6C42;&#x89E3;&#x65B9;&#x6848;" class="headerlink" title="&#x6C42;&#x89E3;&#x65B9;&#x6848;"></a>&#x6C42;&#x89E3;&#x65B9;&#x6848;</h1><ul><li>&#x987A;&#x5E8F;&#x8868;</li><li>&#x5FAA;&#x73AF;&#x94FE;&#x8868;(&#x4E0D;&#x5E26;&#x5934;&#x8282;&#x70B9;)<br>&#x503C;&#x5F97;&#x6CE8;&#x610F;&#x7684;&#x662F;&#xFF0C;&#x5176;&#x5B9E;&#x4E24;&#x79CD;&#x65B9;&#x6CD5;&#x90FD;&#x662F;&#x5229;&#x7528;&#x4E86;&#x5FAA;&#x73AF;&#x7684;&#x7ED3;&#x6784;&#xFF0C;&#x60F3;&#x8C61;&#x6210;&#x4E00;&#x4E2A;&#x65F6;&#x949F;&#x7684;&#x8868;&#x76D8;</li></ul><ol><li>&#x987A;&#x5E8F;&#x8868;</li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">&#x7EA6;&#x745F;&#x592B;&#x95EE;&#x9898;&#x7684;&#x987A;&#x5E8F;&#x8868;&#x5B9E;&#x73B0;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">author: Qian Jipeng(C)</span></span><br><span class="line"><span class="comment">date: 2019-3-21</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxsize 100</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">node</span></span></span><br><span class="line"><span class="class">{</span></span><br><span class="line">    <span class="keyword">int</span> data[maxsize];</span><br><span class="line">    <span class="keyword">int</span> length;</span><br><span class="line">}SeqList, *PSeqList;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* &#x521D;&#x59CB;&#x5316; */</span></span><br><span class="line"><span class="function">PSeqList <span class="title">Init</span><span class="params">()</span></span>{</span><br><span class="line">    PSeqList L;</span><br><span class="line">    L = (PSeqList)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(SeqList));</span><br><span class="line">    <span class="keyword">if</span> (L){</span><br><span class="line">        L-&gt;length = <span class="number">0</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> L;       <span class="comment">/*&#x3000;&#x8FD4;&#x56DE;&#x987A;&#x5E8F;&#x8868;&#x6307;&#x9488;&#x3000;*/</span></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">/* &#x63D2;&#x5165; */</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">InSeqList</span><span class="params">(PSeqList L, <span class="keyword">int</span> i, <span class="keyword">int</span> e)</span></span>{</span><br><span class="line">    <span class="keyword">if</span>(i &lt; <span class="number">1</span> || i &gt; L-&gt;length+<span class="number">1</span> || L-&gt;length &gt;= maxsize){</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;&#x63D2;&#x5165;&#x5931;&#x8D25;!\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">else</span>{</span><br><span class="line">        <span class="keyword">int</span> j;</span><br><span class="line">        L-&gt;data[i<span class="number">-1</span>] = e;</span><br><span class="line">        <span class="keyword">for</span> (j=L-&gt;length; j&gt;=i; j--){</span><br><span class="line">            L-&gt;data[j] = L-&gt;data[j<span class="number">-1</span>];          <span class="comment">/*&#x3000;&#x4F9D;&#x6B21;&#x5F80;&#x540E;&#x79FB;&#x52A8;&#x3000;*/</span></span><br><span class="line">        }</span><br><span class="line">        L-&gt;length ++;</span><br><span class="line"></span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">/* &#x5220;&#x9664; */</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">DelSeqList</span><span class="params">(PSeqList L, <span class="keyword">int</span> i, <span class="keyword">int</span> *x)</span></span>{</span><br><span class="line">    <span class="keyword">if</span> ( i &lt; <span class="number">1</span> || i &gt; L-&gt;length){</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;&#x5220;&#x9664;&#x4F4D;&#x7F6E;&#x4E0D;&#x5408;&#x6CD5;\n&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> j;</span><br><span class="line"><span class="keyword">int</span> tmp;<span class="comment">// &#x4FDD;&#x5B58;&#x5C06;&#x88AB;&#x5220;&#x9664;&#x7684;&#x5143;&#x7D20;</span></span><br><span class="line">tmp = L-&gt;data[i<span class="number">-1</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (j = i ; j &lt;= L-&gt;length; j++ ){<span class="comment">// &#x4ECE;&#x7B2C;I &#x4E2A;&#x5F00;&#x59CB;&#x5F80;&#x524D;&#x79FB;&#x52A8;&#x4E00;&#x4F4D;</span></span><br><span class="line">L-&gt;data[j<span class="number">-1</span>] = L-&gt;data[j];</span><br><span class="line">}</span><br><span class="line">L-&gt;length --;</span><br><span class="line"><span class="comment">//printf(&quot;&#x5220;&#x9664;&#x7B2C; %d &#x4E2A;&#x4F4D;&#x7F6E;&#x5143;&#x7D20; %d &#x6210;&#x529F;&#xFF01;\n&quot;, i, tmp);</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// &#x529F;&#x80FD;&#x51FD;&#x6570; s &#x5F00;&#x59CB;&#xFF0C; &#x6570;&#x5230;  m </span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">yusefu_SeqList</span><span class="params">(PSeqList L, <span class="keyword">int</span> s, <span class="keyword">int</span> m)</span></span>{</span><br><span class="line">    <span class="keyword">int</span> x;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">int</span> s1;</span><br><span class="line">    <span class="keyword">int</span> w;      <span class="comment">// &#x4FDD;&#x5B58;&#x5220;&#x9664;&#x7684;&#x5143;&#x7D20;</span></span><br><span class="line">    <span class="keyword">if</span>( L-&gt; length == <span class="number">0</span>){</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;&#x8868;&#x7A7A;!\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    }</span><br><span class="line">    s1 = s <span class="number">-1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// &#x4F9D;&#x6B21;&#x51FA;&#x53BB;</span></span><br><span class="line">    <span class="keyword">for</span> (i = L-&gt;length; i &gt; <span class="number">0</span>; i--){</span><br><span class="line">        </span><br><span class="line">        <span class="comment">/* &#x5173;&#x952E;&#x6B65;&#x9AA4;&#x3000;*/</span></span><br><span class="line">        s1 = (s1+m<span class="number">-1</span>) % i;</span><br><span class="line">        w = L -&gt; data[s1];      <span class="comment">// &#x4E0B;&#x6807; s1, &#x662F;&#x7B2C;s1+1 &#x4E2A;&#x5143;&#x7D20;&#xFF01;&#xFF01;&#xFF01;</span></span><br><span class="line">        DelSeqList(L, s1+<span class="number">1</span>, &amp;x);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;&#x51FA;&#x5217;: %d\n&quot;</span>, w);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line">    <span class="keyword">int</span> len;        <span class="comment">// &#x5E8F;&#x5217;&#x957F;&#x5EA6;</span></span><br><span class="line">    <span class="keyword">int</span> num[maxsize];       <span class="comment">// &#x7528;&#x6765;&#x5B58;&#x8F93;&#x5165;&#x7684;&#x6570;</span></span><br><span class="line">    PSeqList L = (PSeqList)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(SeqList));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;&#x8F93;&#x5165;&#x5E8F;&#x5217;&#x5143;&#x7D20;&#x4E2A;&#x6570;: &quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;len);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;&#x8F93;&#x5165;&#x7EA6;&#x745F;&#x592B;&#x5E8F;&#x5217;(&#x7A7A;&#x683C;&#x5206;&#x5F00;): &quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// &#x4F9D;&#x6B21;&#x63D2;&#x5165;</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> l = <span class="number">0</span>; l &lt; len; l++ ){</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;num[l]);</span><br><span class="line">        InSeqList(L, l+<span class="number">1</span>, num[l]);</span><br><span class="line">        <span class="comment">//printf(&quot; %d &quot;, num[l]);</span></span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    yusefu_SeqList(L, <span class="number">2</span>, <span class="number">5</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>2.&#x5FAA;&#x73AF;&#x94FE;&#x8868;</p><p>&#x8FD9;&#x91CC;&#x7684;&#x5FAA;&#x73AF;&#x94FE;&#x8868;&#x662F;&#x6CA1;&#x6709;&#x5934;&#x7ED3;&#x70B9;&#x7684;&#xFF0C;&#x4E3A;&#x4E86;&#x64CD;&#x4F5C;&#x65B9;&#x4FBF;&#xFF0C;&#x5426;&#x5219;&#x6BCF;&#x6BCF;&#x5FAA;&#x73AF;&#x5230;&#x5934;&#x7ED3;&#x70B9;&#x8FD8;&#x8981;&#x8DF3;&#x8FC7;&#x8FD9;&#x4E2A;&#x5934;&#x7ED3;&#x70B9;&#xFF0C;&#x6211;&#x7684;&#x505A;&#x6CD5;&#x662F;:<br>1.&#x3000;&#x5148;&#x628A;&#x7B2C;&#x4E00;&#x4E2A;&#x5143;&#x7D20;&#x653E;&#x5165;&#x7B2C;&#x4E00;&#x4E2A;&#x8282;&#x70B9;(&#x5373;&#x9996;&#x5143;&#x8282;&#x70B9;)&#xFF0C;&#x53EA;&#x6709;&#x6570;&#x636E;&#x57DF;&#xFF0C;&#x6307;&#x9488;&#x57DF;&#x7F6E;&#x7A7A;<br>2.&#x3000;&#x63A5;&#x7740;&#x7528;&#x4E2A;&#x5FAA;&#x73AF;&#xFF0C;&#x521B;&#x5EFA;&#x5269;&#x4E0B;&#x7684;&#x5355;&#x4E2A;&#x8282;&#x70B9;&#xFF0C;&#x540C;&#x6837;&#x53EA;&#x6709;&#x6570;&#x636E;&#x57DF;<br>3.&#x3000;&#x518D;&#x628A;&#x8FD9;&#x4E9B;&#x8282;&#x70B9;&#x8FDE;&#x63A5;&#x8D77;&#x6765;</p><figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*  &#x7EA6;&#x745F;&#x592B;&#x95EE;&#x9898;&#x7684;&#x5FAA;&#x73AF;&#x94FE;&#x8868;&#x5B9E;&#x73B0;</span></span><br><span class="line"><span class="comment">* author: Qian Jipeng(C)</span></span><br><span class="line"><span class="comment">* date: 2019-3-24</span></span><br><span class="line"><span class="comment">* version: 2.0(1.0 aborted for too complexed)</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">#include &lt;stdlib.h&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* node definition&#x3000;*/</span></span><br><span class="line">typedef struct node{</span><br><span class="line">    int <span class="keyword">data</span>;</span><br><span class="line">    struct node * next;</span><br><span class="line">}linklist;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*&#x3000;</span></span><br><span class="line"><span class="comment">\brief: crate the linklist and do insert, return the first node&apos;s ptr&#x3000;</span></span><br><span class="line"><span class="comment">\param: n -&gt;&gt; the size of the serises</span></span><br><span class="line"><span class="comment">\return: the first node&apos;s ptr</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* creat the node in range(1, n)*/</span></span><br><span class="line">linklist * initLink(int n){</span><br><span class="line">    linklist * head = (linklist*)malloc(sizeof(linklist));</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* the first node initionalized (not head node)*/</span></span><br><span class="line">    <span class="function"><span class="title">head</span>-&gt;</span><span class="keyword">data</span> = <span class="number">1</span>;</span><br><span class="line">    <span class="function"><span class="title">head</span>-&gt;</span>next = NULL;        </span><br><span class="line">    </span><br><span class="line">    <span class="comment">/* a ptr to move through the list */</span></span><br><span class="line">    linklist * tmp = head;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* we satrt with the second node for a loop */</span></span><br><span class="line">    <span class="keyword">for</span> (int i = <span class="number">2</span>; i &lt;= n; i ++) {</span><br><span class="line">        linklist * body = (linklist*)malloc(sizeof(linklist));</span><br><span class="line"></span><br><span class="line">        <span class="comment">/* creat and init single node */</span></span><br><span class="line">        <span class="function"><span class="title">body</span> -&gt;</span> <span class="keyword">data</span> = i;</span><br><span class="line">        <span class="function"><span class="title">body</span> -&gt;</span> next = NULL;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/* connect the single nodes together */</span></span><br><span class="line">        <span class="function"><span class="title">tmp</span> -&gt;</span> next = body;</span><br><span class="line">        <span class="function"><span class="title">tmp</span> = tmp -&gt;</span> next;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">//printf(&quot;%d\n&quot;, tmp-&gt;data);</span></span><br><span class="line">    <span class="comment">/* now tmp is just the last node */</span></span><br><span class="line">    <span class="function"><span class="title">tmp</span> -&gt;</span> next = head;     <span class="comment">/*connect the head and the rear */</span></span><br><span class="line">    return head;</span><br><span class="line">    <span class="comment">/* by this method, we created a loop linklist */</span></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">void yusefu(linklist * head,int k,int m){</span><br><span class="line">    linklist * tail = head;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//&#x627E;&#x5230;&#x94FE;&#x8868;&#x7B2C;&#x4E00;&#x4E2A;&#x7ED3;&#x70B9;&#x7684;&#x4E0A;&#x4E00;&#x4E2A;&#x7ED3;&#x70B9;&#xFF0C;&#x4E3A;&#x5220;&#x9664;&#x64CD;&#x4F5C;&#x505A;&#x51C6;&#x5907;</span></span><br><span class="line">    <span class="function"><span class="title">while</span> (tail -&gt;</span> next != head) {</span><br><span class="line">        <span class="function"><span class="title">tail</span> = tail -&gt;</span> next;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    linklist * p = head;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//&#x627E;&#x5230;&#x7F16;&#x53F7;&#x4E3A;k&#x7684;&#x4EBA;(&#x6216;&#x8005;&#x662F;&#x7B2C;&#x51E0;&#x4E2A;&#x5F00;&#x59CB;&#xFF0C;&#x53EF;&#x4EE5;&#x6539;)</span></span><br><span class="line">    <span class="function"><span class="title">while</span> (p -&gt;</span> <span class="keyword">data</span> != k) {</span><br><span class="line">        tail = p;</span><br><span class="line">        <span class="function"><span class="title">p</span> = p-&gt;</span>next;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">//&#x4ECE;&#x7F16;&#x53F7;&#x4E3A;k&#x7684;&#x4EBA;&#x5F00;&#x59CB;&#xFF0C;&#x53EA;&#x6709;&#x7B26;&#x5408;p-&gt;next==p&#x65F6;&#xFF0C;&#x8BF4;&#x660E;&#x94FE;&#x8868;&#x4E2D;&#x9664;&#x4E86;p&#x7ED3;&#x70B9;&#xFF0C;&#x6240;&#x6709;&#x7F16;&#x53F7;&#x90FD;&#x51FA;&#x5217;&#x4E86;&#xFF0C;</span></span><br><span class="line">    <span class="function"><span class="title">while</span> (p -&gt;</span> next != p) {</span><br><span class="line">        <span class="comment">//&#x627E;&#x5230;&#x4ECE;p&#x62A5;&#x6570;1&#x5F00;&#x59CB;&#xFF0C;&#x62A5;m&#x7684;&#x4EBA;&#xFF0C;&#x5E76;&#x4E14;&#x8FD8;&#x8981;&#x77E5;&#x9053;&#x6570;m-1de&#x4EBA;&#x7684;&#x4F4D;&#x7F6E;tail&#xFF0C;&#x65B9;&#x4FBF;&#x505A;&#x5220;&#x9664;&#x64CD;&#x4F5C;&#x3002;</span></span><br><span class="line">        <span class="keyword">for</span> (int i = <span class="number">1</span>; i &lt; m; i ++) {</span><br><span class="line">            tail = p;</span><br><span class="line">            <span class="function"><span class="title">p</span> = p -&gt;</span> next;</span><br><span class="line">        }</span><br><span class="line">        <span class="function"><span class="title">tail</span>-&gt;</span><span class="function"><span class="title">next</span>=p-&gt;</span>next;<span class="comment">//&#x4ECE;&#x94FE;&#x8868;&#x4E0A;&#x5C06;p&#x7ED3;&#x70B9;&#x53BB;&#x9664;</span></span><br><span class="line">        <span class="function"><span class="title">printf</span>(&quot;%d \t&quot;,p -&gt;</span> <span class="keyword">data</span>);</span><br><span class="line">        free(p);</span><br><span class="line">        <span class="function"><span class="title">p</span> = tail -&gt;</span> next;<span class="comment">//&#x7EE7;&#x7EED;&#x4F7F;&#x7528;p&#x6307;&#x9488;&#x6307;&#x5411;&#x51FA;&#x5217;&#x7F16;&#x53F7;&#x7684;&#x4E0B;&#x4E00;&#x4E2A;&#x7F16;&#x53F7;</span></span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* the last one */</span></span><br><span class="line">    <span class="function"><span class="title">printf</span>(&quot;%d \n&quot;,p -&gt;</span> <span class="keyword">data</span>);</span><br><span class="line">    free(p);</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">int main() {</span><br><span class="line"></span><br><span class="line">    linklist * head=initLink(<span class="number">10</span>);</span><br><span class="line">  </span><br><span class="line">    yusefu(head, <span class="number">2</span>, <span class="number">5</span>);</span><br><span class="line">    return <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>http://www.qianjipeng.top/2019/08/17/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E7%BA%A6%E7%91%9F%E5%A4%AB%E9%97%AE%E9%A2%98%E7%9A%84%E6%B1%82%E8%A7%A3/#disqus_thread</comments>
    </item>
    
    <item>
      <title>数据结构之逆波兰式</title>
      <link>http://www.qianjipeng.top/2019/08/17/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E9%80%86%E6%B3%A2%E5%85%B0%E5%BC%8F/</link>
      <guid>http://www.qianjipeng.top/2019/08/17/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E9%80%86%E6%B3%A2%E5%85%B0%E5%BC%8F/</guid>
      <pubDate>Sat, 17 Aug 2019 12:40:35 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;&amp;#x5B66;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x7ED3;&amp;#x6784;&amp;#xFF0C;&amp;#x611F;&amp;#x89C9;&amp;#x638C;&amp;#x63E1;&amp;#x7684;&amp;#x4E0D;&amp;#x7262;&amp;#x56FA;&amp;#xFF0C;&amp;#x4E8E;&amp;
        
      
      </description>
      
      <content:encoded><![CDATA[<p>&#x5B66;&#x7684;&#x6570;&#x636E;&#x7ED3;&#x6784;&#xFF0C;&#x611F;&#x89C9;&#x638C;&#x63E1;&#x7684;&#x4E0D;&#x7262;&#x56FA;&#xFF0C;&#x4E8E;&#x662F;&#x5B9E;&#x73B0;&#x4E86;&#x4E00;&#x4E2A;demo</p><h1 id="&#x4E2D;&#x7F00;&#x8868;&#x8FBE;&#x5F0F;&#x8F6C;&#x6362;&#x4E3A;&#x540E;&#x7F00;&#x8868;&#x8FBE;&#x5F0F;&#x5E76;&#x6C42;&#x503C;"><a href="#&#x4E2D;&#x7F00;&#x8868;&#x8FBE;&#x5F0F;&#x8F6C;&#x6362;&#x4E3A;&#x540E;&#x7F00;&#x8868;&#x8FBE;&#x5F0F;&#x5E76;&#x6C42;&#x503C;" class="headerlink" title="&#x4E2D;&#x7F00;&#x8868;&#x8FBE;&#x5F0F;&#x8F6C;&#x6362;&#x4E3A;&#x540E;&#x7F00;&#x8868;&#x8FBE;&#x5F0F;&#x5E76;&#x6C42;&#x503C;"></a>&#x4E2D;&#x7F00;&#x8868;&#x8FBE;&#x5F0F;&#x8F6C;&#x6362;&#x4E3A;&#x540E;&#x7F00;&#x8868;&#x8FBE;&#x5F0F;&#x5E76;&#x6C42;&#x503C;</h1><ol><li>&#x7B97;&#x6CD5;&#x601D;&#x60F3;:<br>&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x64CD;&#x4F5C;&#x6570;&#x6808;&#xFF0C;&#x81EA;&#x5DE6;&#x5411;&#x53F3;&#x904D;&#x5386;&#x540E;&#x7F00;&#x8868;&#x8FBE;&#x5F0F;&#xFF0C;&#x9047;&#x5230;&#x4E00;&#x4E2A;&#x64CD;&#x4F5C;&#x6570;&#x5C31;&#x5165;&#x6808;&#xFF0C;<br>&#x9047;&#x5230;&#x4E00;&#x4E2A;&#x64CD;&#x4F5C;&#x7B26;&#x5C31;&#x4ECE;&#x6808;&#x4E2D;&#x53D6;&#x51FA;&#x4E24;&#x4E2A;&#x64CD;&#x4F5C;&#x6570;&#x8FDB;&#x884C;&#x5F53;&#x524D;&#x8BA1;&#x7B97;&#xFF0C;&#x8F7D;&#x628A;&#x7ED3;&#x679C;&#x5165;&#x6808;&#xFF0C;<br>&#x76F4;&#x5230;&#x8868;&#x8FBE;&#x5F0F;&#x672B;&#x5C3E;, &#x6700;&#x540E;&#x4E00;&#x4E2A;&#x5165;&#x6808;&#x7684;&#x5C31;&#x662F;&#x6700;&#x7EC8;&#x7ED3;&#x679C;</li><li>&#x5148;&#x5B9E;&#x73B0;&#x6C42;&#x503C;&#x8FD9;&#x4E00;&#x6B65;&#x5427;&#xFF0C;&#x5DF2;&#x77E5;&#x540E;&#x7F00;&#x8868;&#x8FBE;&#x5F0F; </li><li>&#x8F6C;&#x6362;&#x8FD9;&#x4E00;&#x73AF;&#x8282;&#x5F85;&#x66F4;&#x65B0;&#x2026;</li></ol><h1 id="&#x6E90;&#x4EE3;&#x7801;"><a href="#&#x6E90;&#x4EE3;&#x7801;" class="headerlink" title="&#x6E90;&#x4EE3;&#x7801;"></a>&#x6E90;&#x4EE3;&#x7801;</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxsize 100</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> datatype int</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> {</span></span><br><span class="line">datatype data[maxsize];</span><br><span class="line"><span class="keyword">int</span> top;<span class="comment">// top &#x6307;&#x660E;&#x5F53;&#x524D;&#x6808;&#x9876;&#x5143;&#x7D20;&#x7684;&#x4F4D;&#x7F6E;</span></span><br><span class="line">} SeqStack, *PSeqStack;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// &#x521D;&#x59CB;&#x5316;&#x987A;&#x5E8F;&#x6808;</span></span><br><span class="line"><span class="function">PSeqStack <span class="title">Init_SeqStack</span><span class="params">()</span></span>{</span><br><span class="line">PSeqStack S;</span><br><span class="line">S = (PSeqStack) <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(SeqStack));</span><br><span class="line"><span class="comment">//printf(&quot;%p\n&quot;, S);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (S)</span><br><span class="line">S -&gt; top = <span class="number">-1</span>;<span class="comment">// top &#x8BBE;&#x4E3A;-1 (&#x8BA4;&#x4E3A;&#x8BBE;&#x5B9A;),&#x8868;&#x793A;&#x7A7A;</span></span><br><span class="line"><span class="keyword">return</span> S;<span class="comment">// &#x8FD4;&#x56DE;&#x6307;&#x5411;&#x987A;&#x5E8F;&#x6808;&#x7684;&#x6307;&#x9488;</span></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// &#x5224;&#x65AD;&#x6808;&#x7A7A;</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Empty_SeqStack</span><span class="params">(PSeqStack S)</span></span>{</span><br><span class="line"><span class="comment">// &#x6CA1;&#x6709;&#x5143;&#x7D20;&#xFF0C;&#x7A7A;&#x6808;</span></span><br><span class="line"><span class="keyword">if</span> (S -&gt; top == <span class="number">-1</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;<span class="comment">// 1 &#x8868;&#x793A;&#x4E3A;&#x7A7A;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// &#x5165;&#x6808;</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Push_SeqStack</span><span class="params">(PSeqStack S, datatype x)</span></span>{</span><br><span class="line"><span class="keyword">if</span> (S -&gt; top == maxsize<span class="number">-1</span>){</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;&#x6808;&#x6EE1;&#x4E0D;&#x80FD;&#x518D;&#x5165;&#x6808;\n&quot;</span>);</span><br><span class="line"><span class="comment">//return 0;// &#x8FD4;&#x56DE; 0 &#x8868;&#x793A;&#x5931;&#x8D25;</span></span><br><span class="line">}</span><br><span class="line"><span class="keyword">else</span>{</span><br><span class="line">S -&gt; top ++;</span><br><span class="line">S -&gt; data[S -&gt; top] = x;</span><br><span class="line"></span><br><span class="line"><span class="comment">//return 1;</span></span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// &#x51FA;&#x6808;,&#x4FDD;&#x5B58;&#x6808;&#x9876;&#x5143;&#x7D20;&#x4E8E;*x&#x4E2D;&#xFF0C;&#x5E76;&#x5220;&#x9664;</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Pop_SeqStack</span><span class="params">(PSeqStack S, datatype *x)</span></span>{</span><br><span class="line"><span class="keyword">if</span> (Empty_SeqStack(S)){</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;&#x6808;&#x7A7A;&#x4E0D;&#x80FD;&#x51FA;&#x6808;\n&quot;</span>);</span><br><span class="line"><span class="comment">//return 0;// 0 &#x8868;&#x793A;&#x51FA;&#x6808;&#x5931;&#x8D25;</span></span><br><span class="line">}</span><br><span class="line"><span class="keyword">else</span>{</span><br><span class="line">*x = S -&gt; data[S -&gt; top];</span><br><span class="line">S -&gt; top --;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//return 1;</span></span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// &#x53D6;&#x6808;&#x9876;&#x5143;&#x7D20;&#xFF0C;&#x53EA;&#x662F;&#x83B7;&#x53D6;&#x4ED6;&#x7684;&#x503C;&#x5E76;&#x5B58;&#x5165;*x&#xFF0C;&#x5E76;&#x6CA1;&#x6709;&#x53D6;&#x51FA;&#x6765;(&#x5220;&#x9664;),&#x6CE8;&#x610F;&#x533A;&#x522B;</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">GetTop_SeqStack</span><span class="params">(PSeqStack S, datatype *x)</span></span>{</span><br><span class="line"><span class="keyword">if</span> (Empty_SeqStack(S)){</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;&#x6808;&#x7A7A;&#x4E0D;&#x80FD;&#x53D6;top&#x5143;&#x7D20;\n&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span>{</span><br><span class="line">*x = S -&gt; data[S -&gt; top];</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// &#x9500;&#x6BC1;&#x6808;&#xFF0C;&#x53C2;&#x6570;&#x4E3A;&#x5F85;&#x9500;&#x6BC1;&#x987A;&#x5E8F;&#x6808;&#x7684;&#x6307;&#x9488;&#x5730;&#x5740;</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Destory_SeqStack</span><span class="params">(PSeqStack *S)</span></span>{</span><br><span class="line"><span class="comment">// *S &#x4E8C;&#x7EA7;&#x6307;&#x9488;</span></span><br><span class="line"><span class="keyword">if</span> (*S)</span><br><span class="line"><span class="built_in">free</span> (*S);</span><br><span class="line"></span><br><span class="line">*S = <span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*&#x3000;&#x5224;&#x65AD;&#x662F;&#x5426;&#x662F;&#x64CD;&#x4F5C;&#x6570;&#x3000;*/</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">IsNum</span><span class="params">(<span class="keyword">char</span> c)</span></span>{</span><br><span class="line"><span class="keyword">if</span> (c &gt;= <span class="string">&apos;0&apos;</span> &amp;&amp; c &lt;= <span class="string">&apos;9&apos;</span>){</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">char</span> <span class="title">transfer</span><span class="params">()</span></span>{</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">/* &#x6838;&#x5FC3;&#x51FD;&#x6570;&#x3000;*/</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">calculate</span><span class="params">(<span class="keyword">char</span> *A)</span></span>{</span><br><span class="line">PSeqStack s = Init_SeqStack();</span><br><span class="line"><span class="keyword">int</span> result;</span><br><span class="line"><span class="keyword">int</span> a, b, c;    <span class="comment">// a,b &#x4E0A;&#x4E00;&#x6B21;&#xFF0C;&#x4E0A;&#x4E0A;&#x4E00;&#x6B21;&#x5165;&#x6808;&#x7684;&#x5143;&#x7D20;&#xFF0C;&#xFF23;&#x662F;&#x4E34;&#x65F6;&#x53D8;&#x91CF;</span></span><br><span class="line"><span class="keyword">char</span> ch;</span><br><span class="line"></span><br><span class="line">ch = *A ++;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* &#x6211;&#x4EEC;&#x4EBA;&#x4E3A;&#x8BBE;&#x7F6E;&#xFF0C;&#x5728;&#x5B57;&#x7B26;&#x6570;&#x7EC4;&#x672B;&#x5C3E;&#x52A0;&#x4E00;&#x4E2A;&apos;#&apos;, &#x4F5C;&#x4E3A;&#x7ED3;&#x675F;&#x7B26;&#x3000;*/</span></span><br><span class="line"><span class="keyword">while</span>(ch != <span class="string">&apos;#&apos;</span>){</span><br><span class="line"><span class="keyword">if</span> (IsNum(ch)){</span><br><span class="line">Push_SeqStack(s, ch - <span class="string">&apos;0&apos;</span>);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">{</span><br><span class="line"><span class="comment">/* &#x8FD9;&#x91CC;&#x6CE8;&#x610F;&#xFF0C;&#x3000;&#x5148;&#x8FDB;&#x540E;&#x51FA;&#x3000;*/</span></span><br><span class="line">Pop_SeqStack(s, &amp;b);</span><br><span class="line">Pop_SeqStack(s, &amp;a);</span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span> (ch)</span><br><span class="line">{</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&apos;+&apos;</span>:</span><br><span class="line">        c = a+b;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&apos;-&apos;</span>:</span><br><span class="line">        c = a-b;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&apos;*&apos;</span>:</span><br><span class="line">        c = a*b;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&apos;/&apos;</span>:</span><br><span class="line">        c = a/b;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">/* &#x4E34;&#x65F6;&#x7ED3;&#x679C;&#x5165;&#x6808;&#x3000;*/</span></span><br><span class="line">Push_SeqStack(s, c);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">ch = *A ++;      </span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">GetTop_SeqStack(s, &amp;result);</span><br><span class="line">Destory_SeqStack(&amp;s);</span><br><span class="line"><span class="keyword">return</span> result;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line"><span class="keyword">char</span> num[<span class="number">12</span>] = {<span class="string">&apos;1&apos;</span>,<span class="string">&apos;2&apos;</span>,<span class="string">&apos;8&apos;</span>,<span class="string">&apos;5&apos;</span>,<span class="string">&apos;-&apos;</span>,<span class="string">&apos;*&apos;</span>,<span class="string">&apos;+&apos;</span>,<span class="string">&apos;4&apos;</span>,<span class="string">&apos;2&apos;</span>,<span class="string">&apos;/&apos;</span>,<span class="string">&apos;-&apos;</span>, <span class="string">&apos;#&apos;</span>};</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;&#x8BA1;&#x7B97;&#x7ED3;&#x679C;: %d\n&quot;</span>,calculate(num));  </span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x6D4B;&#x8BD5;&#x8F93;&#x5165;:</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">char</span> num[<span class="number">12</span>] = {<span class="string">&apos;1&apos;</span>,<span class="string">&apos;2&apos;</span>,<span class="string">&apos;8&apos;</span>,<span class="string">&apos;5&apos;</span>,<span class="string">&apos;-&apos;</span>,<span class="string">&apos;*&apos;</span>,<span class="string">&apos;+&apos;</span>,<span class="string">&apos;4&apos;</span>,<span class="string">&apos;2&apos;</span>,<span class="string">&apos;/&apos;</span>,<span class="string">&apos;-&apos;</span>, <span class="string">&apos;#&apos;</span>};</span><br></pre></td></tr></table></figure><p>&#x6D4B;&#x8BD5;&#x7ED3;&#x679C;:</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">5</span></span><br></pre></td></tr></table></figure><h1 id="&#x5199;&#x5728;&#x6700;&#x540E;"><a href="#&#x5199;&#x5728;&#x6700;&#x540E;" class="headerlink" title="&#x5199;&#x5728;&#x6700;&#x540E;"></a>&#x5199;&#x5728;&#x6700;&#x540E;</h1><p>&#x5176;&#x5B9E;&#xFF0C;&#x4E60;&#x60EF;&#x4E86;&#x7528;C++&#x7684;STL&#x5BB9;&#x5668;&#xFF0C;&#x6211;&#x5728;&#x5E73;&#x65F6;&#x7684;coding&#x4E2D;&#x5F88;&#x5C11;&#x4F1A;&#x81EA;&#x5DF1;&#x53BB;&#x521B;&#x5EFA;&#x4E00;&#x4E9B;&#x6570;&#x636E;&#x7ED3;&#x6784;&#xFF0C;&#x8981;&#x6392;&#x5E8F;&#x4F1A;&#x6709;<em>std::sort()</em>&#x51FD;&#x6570;&#xFF0C;&#x800C;&#x4E14;STL&#x5BB9;&#x5668;&#x7684;&#x7B97;&#x6CD5;&#x590D;&#x6742;&#x5EA6;&#x8981;&#x8FDC;&#x6BD4;&#x5355;&#x4E00;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x7B97;&#x6CD5;&#x590D;&#x6742;&#x5EA6;&#x8981;&#x5C0F;&#x7684;&#x591A;&#xFF0C;&#x5C31;&#x62FF;&#x6392;&#x5E8F;&#x6765;&#x8BF4;&#xFF0C;&#x4ED6;&#x7528;&#x7684;&#x53EF;&#x4E0D;&#x6B62;&#x4E00;&#x79CD;&#x6392;&#x5E8F;&#x7B97;&#x6CD5;&#xFF0C;&#x4E0D;&#x4FE1;&#x8FD9;&#x4E2A;&#x6709;&#x65F6;&#x95F4;&#x54B1;&#x4EEC;&#x53EF;&#x4EE5;&#x9A8C;&#x8BC1;&#x2026;<br>&#x6211;&#x5B66;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x6700;&#x5927;&#x7684;&#x6536;&#x83B7;&#x5C31;&#x662F;&#xFF1A;</p><ul><li>&#x5B66;&#x4F1A;&#x7528;&#x8BA1;&#x7B97;&#x673A;&#x7684;&#x601D;&#x7EF4;&#x53BB;&#x601D;&#x8003;&#x95EE;&#x9898;</li><li>&#x5B66;&#x4F1A;&#x5982;&#x4F55;&#x8C03;&#x8BD5;&#x7A0B;&#x5E8F;</li><li>&#x5B66;&#x4F1A;&#x8010;&#x5FC3;&#x505A;&#x4E00;&#x4EF6;&#x4E8B;<a href>&#x8BFE;&#x7A0B;&#x8BBE;&#x8BA1;</a></li></ul>]]></content:encoded>
      
      <comments>http://www.qianjipeng.top/2019/08/17/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B9%8B%E9%80%86%E6%B3%A2%E5%85%B0%E5%BC%8F/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Linux系统下文件乱码问题解决</title>
      <link>http://www.qianjipeng.top/2019/08/17/Linux%E7%B3%BB%E7%BB%9F%E4%B8%8B%E6%96%87%E4%BB%B6%E4%B9%B1%E7%A0%81%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3-1/</link>
      <guid>http://www.qianjipeng.top/2019/08/17/Linux%E7%B3%BB%E7%BB%9F%E4%B8%8B%E6%96%87%E4%BB%B6%E4%B9%B1%E7%A0%81%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3-1/</guid>
      <pubDate>Sat, 17 Aug 2019 12:28:45 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;&amp;#x4ECA;&amp;#x5929;&amp;#x5728;github&amp;#x4E0A;clone&amp;#x4E86;&amp;#x4E00;&amp;#x4E2A;master&amp;#xFF0C;&amp;#x60F3;&amp;#x62FF;&amp;#x6765;&amp;#x7EC3;&amp;#x624B;&amp;#xFF0C;&amp;#x65E0;
        
      
      </description>
      
      <content:encoded><![CDATA[<p>&#x4ECA;&#x5929;&#x5728;github&#x4E0A;clone&#x4E86;&#x4E00;&#x4E2A;master&#xFF0C;&#x60F3;&#x62FF;&#x6765;&#x7EC3;&#x624B;&#xFF0C;&#x65E0;&#x5948;&#x662F;Windows&#x4E0B;&#x7684;&#x7F16;&#x7801;&#xFF0C;&#x4E2D;&#x6587;&#x4E71;&#x7801;&#xFF0C;&#x82F1;&#x6587;OK&#x3002;&#x4E8E;&#x662F;&#x60F3;&#x5230;&#x4E4B;&#x524D;&#x770B;&#x8FC7;&#x4E00;&#x7BC7;&#x5E16;&#x5B50;&#xFF0C;&#x8BB0;&#x5F55;&#x5982;&#x4E0B;&#x3002;</p><ul><li>&#x4E3B;&#x8981;&#x662F;&#x7528;&#x5230;&#x4E86;Linux&#x7684; <a href="https://baike.baidu.com/item/iconv/524310" target="_blank" rel="noopener">iconv</a> &#x547D;&#x4EE4;</li></ul><h2 id="Step-one-&#x83B7;&#x53D6;&#x5F53;&#x524D;&#x6587;&#x4EF6;&#x7F16;&#x7801;"><a href="#Step-one-&#x83B7;&#x53D6;&#x5F53;&#x524D;&#x6587;&#x4EF6;&#x7F16;&#x7801;" class="headerlink" title="Step one&#x3000;&#x83B7;&#x53D6;&#x5F53;&#x524D;&#x6587;&#x4EF6;&#x7F16;&#x7801;"></a>Step one&#x3000;&#x83B7;&#x53D6;&#x5F53;&#x524D;&#x6587;&#x4EF6;&#x7F16;&#x7801;</h2><p>&#x6211;&#x5F53;&#x524D;&#x6587;&#x4EF6;&#x662F; <em>Student.cpp</em></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">file Student.cpp</span><br></pre></td></tr></table></figure><p>&#x5F97;&#x5230;&#x8F93;&#x51FA;&#x5982;&#x4E0B;&#xFF1A;</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Student.cpp: C <span class="built_in">source</span>, UTF-8 Unicode text</span><br></pre></td></tr></table></figure><p>&#x662F;&#x4E2A;&#x4E07;&#x56FD;&#x7801;</p><h2 id="Step-Two-&#x83B7;&#x53D6;&#x672C;&#x673A;&#x7F16;&#x7801;"><a href="#Step-Two-&#x83B7;&#x53D6;&#x672C;&#x673A;&#x7F16;&#x7801;" class="headerlink" title="Step Two &#x83B7;&#x53D6;&#x672C;&#x673A;&#x7F16;&#x7801;"></a>Step Two &#x83B7;&#x53D6;&#x672C;&#x673A;&#x7F16;&#x7801;</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/sysconfig/i18n</span><br></pre></td></tr></table></figure><p>&#x4E0D;&#x77E5;&#x9053;&#x4E3A;&#x4EC0;&#x4E48;&#x6211;&#x8FD9;&#x91CC;&#x62A5;&#x9519;&#xFF0C;&#x6CA1;&#x6709;&#x8FD9;&#x4E2A;&#x6587;&#x4EF6;???<br>&#x4E0D;&#x8FC7;Linux&#x4E00;&#x822C;&#x90FD;&#x662F;UTF-8</p><h2 id="Step-Three-&#x4FEE;&#x6539;&#x6587;&#x4EF6;&#x7F16;&#x7801;"><a href="#Step-Three-&#x4FEE;&#x6539;&#x6587;&#x4EF6;&#x7F16;&#x7801;" class="headerlink" title="Step Three &#x4FEE;&#x6539;&#x6587;&#x4EF6;&#x7F16;&#x7801;"></a>Step Three &#x4FEE;&#x6539;&#x6587;&#x4EF6;&#x7F16;&#x7801;</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iconv -f GBK -t UTF-8  Student.cpp -o  Student0.cpp</span><br></pre></td></tr></table></figure><p>&#x8FD9;&#x91CC;<em>Student.cpp</em>&#x662F;&#x539F;&#x6765;&#x7684;&#x6587;&#x4EF6;&#xFF0C;<em>Student0.cpp</em>&#x662F;&#x6211;&#x4FEE;&#x6539;&#x540E;&#x7684;&#x6587;&#x4EF6;&#x3002;</p><p>&#x6539;&#x540E;&#x6253;&#x5F00;&#x6587;&#x4EF6;&#x5C31;&#x6CA1;&#x6709;&#x4E71;&#x7801;&#x95EE;&#x9898;&#x4E86;</p><h3 id="&#x8FD9;&#x91CC;&#x6709;&#x4E2A;&#x95EE;&#x9898;&#xFF0C;&#x5982;&#x679C;&#x6709;&#x591A;&#x4E2A;&#x6587;&#x4EF6;&#x4E0D;&#x80FD;&#x5728;&#x4E00;&#x8D77;&#x8F6C;&#x5316;"><a href="#&#x8FD9;&#x91CC;&#x6709;&#x4E2A;&#x95EE;&#x9898;&#xFF0C;&#x5982;&#x679C;&#x6709;&#x591A;&#x4E2A;&#x6587;&#x4EF6;&#x4E0D;&#x80FD;&#x5728;&#x4E00;&#x8D77;&#x8F6C;&#x5316;" class="headerlink" title="&#x8FD9;&#x91CC;&#x6709;&#x4E2A;&#x95EE;&#x9898;&#xFF0C;&#x5982;&#x679C;&#x6709;&#x591A;&#x4E2A;&#x6587;&#x4EF6;&#x4E0D;&#x80FD;&#x5728;&#x4E00;&#x8D77;&#x8F6C;&#x5316;"></a>&#x8FD9;&#x91CC;&#x6709;&#x4E2A;&#x95EE;&#x9898;&#xFF0C;&#x5982;&#x679C;&#x6709;&#x591A;&#x4E2A;&#x6587;&#x4EF6;&#x4E0D;&#x80FD;&#x5728;&#x4E00;&#x8D77;&#x8F6C;&#x5316;</h3><p>&#x6BD4;&#x5982;&#x6211;&#x6709;&#x4E24;&#x4E2A;&#x6587;&#x4EF6;&#xFF0C;<em>Student.cpp</em> &#x548C; <em>Student.h</em> &#x5FC5;&#x987B;&#x8981;&#x6267;&#x884C;&#x4E24;&#x6B21;&#x547D;&#x4EE4;&#xFF0C;&#x5C34;&#x5C2C;&#x3002;<br>&#x540E;&#x6765;&#x60F3;&#x8D77;&#x6765;&#x53EF;&#x4EE5;&#x7528;&#x901A;&#x914D;&#x7B26;&#xFF0C;&#x6587;&#x4EF6;&#x540D;&#x4E0D;&#x6539;&#x53D8;&#xFF0C;&#x5373;&#x53EF;</p><ul><li>&#x6CE8;&#x610F;&#xFF1A; &#x901A;&#x914D;&#x7B26;&#x8981;&#x614E;&#x7528;!</li><li>&#x6700;&#x540E;&#x7684;&#x6700;&#x540E;: &#x5199;&#x4E86;&#x4E2A;&#x5C0F;&#x9879;&#x76EE;&#xFF0C;&#x653E;&#x5728;&#x4E86;&#x4ED3;&#x5E93;&#x4E2D;<a href="https://github.com/mokeeqian/demo-projects/tree/master/%E7%BC%96%E7%A0%81%E8%BD%AC%E6%8D%A2" target="_blank" rel="noopener">&#x7F16;&#x7801;&#x8F6C;&#x6362;</a></li></ul>]]></content:encoded>
      
      <comments>http://www.qianjipeng.top/2019/08/17/Linux%E7%B3%BB%E7%BB%9F%E4%B8%8B%E6%96%87%E4%BB%B6%E4%B9%B1%E7%A0%81%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3-1/#disqus_thread</comments>
    </item>
    
    <item>
      <title>和小薇薇的700天</title>
      <link>http://www.qianjipeng.top/2019/08/16/%E5%92%8C%E5%B0%8F%E8%96%87%E8%96%87%E7%9A%84700%E5%A4%A9/</link>
      <guid>http://www.qianjipeng.top/2019/08/16/%E5%92%8C%E5%B0%8F%E8%96%87%E8%96%87%E7%9A%84700%E5%A4%A9/</guid>
      <pubDate>Fri, 16 Aug 2019 13:47:53 GMT</pubDate>
      <description>
      
        Encrypted passage, enter password to read.
      
      </description>
      
      <content:encoded><![CDATA[<script src="/crypto-js.js"></script><script src="/mcommon.js"></script><h3 id="encrypt-message">Encrypted passage, enter password to read.</h3><link rel="stylesheet" href="//cdn.bootcss.com/bootstrap/3.3.5/css/bootstrap.min.css"> <link rel="stylesheet" href="//cdn.bootcss.com/bootstrap/3.3.5/css/bootstrap-theme.min.css"> <script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script> <script src="//cdn.bootcss.com/bootstrap/3.3.5/js/bootstrap.min.js"></script> <div id="security"> <div> <div class="input-group"> <input type="text" class="form-control" aria-label="Enter the password." id="pass"/> <div class="input-group-btn"> <button type="button" class="btn btn-default" onclick="decryptAES()">Decrypt</button> </div> </div> </div> </div> <div id="encrypt-blog" style="display:none">  </div>]]></content:encoded>
      
      <comments>http://www.qianjipeng.top/2019/08/16/%E5%92%8C%E5%B0%8F%E8%96%87%E8%96%87%E7%9A%84700%E5%A4%A9/#disqus_thread</comments>
    </item>
    
  </channel>
</rss>
